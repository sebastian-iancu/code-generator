{
    "bmm_version": "2.3",
    "rm_publisher": "openehr",
    "schema_name": "rm",
    "rm_release": "1.1.0",
    "schema_revision": "1.1.0.1",
    "schema_lifecycle_state": "stable",
    "schema_description": "openEHR Reference Model",
    "schema_author": "codegen",
    "packages": {
        "org.openehr.rm.common": {
            "name": "org.openehr.rm.common",
            "packages": {
                "archetyped": {
                    "name": "archetyped",
                    "classes": [
                        "PATHABLE",
                        "LINK",
                        "LOCATABLE",
                        "ARCHETYPED",
                        "FEEDER_AUDIT",
                        "FEEDER_AUDIT_DETAILS"
                    ]
                },
                "change_control": {
                    "name": "change_control",
                    "classes": [
                        "VERSIONED_OBJECT",
                        "CONTRIBUTION",
                        "VERSION",
                        "IMPORTED_VERSION",
                        "ORIGINAL_VERSION"
                    ]
                },
                "generic": {
                    "name": "generic",
                    "classes": [
                        "REVISION_HISTORY_ITEM",
                        "AUDIT_DETAILS",
                        "ATTESTATION",
                        "PARTICIPATION",
                        "PARTY_PROXY",
                        "PARTY_IDENTIFIED",
                        "PARTY_SELF",
                        "PARTY_RELATED",
                        "REVISION_HISTORY"
                    ]
                },
                "directory": {
                    "name": "directory",
                    "classes": [
                        "VERSIONED_FOLDER",
                        "FOLDER"
                    ]
                },
                "resource": {
                    "name": "resource",
                    "classes": [
                        "AUTHORED_RESOURCE",
                        "RESOURCE_DESCRIPTION",
                        "TRANSLATION_DETAILS",
                        "RESOURCE_DESCRIPTION_ITEM"
                    ]
                },
                "tags": {
                    "name": "tags",
                    "classes": [
                        "ITEM_TAG"
                    ]
                }
            }
        },
        "org.openehr.rm.data_structures": {
            "name": "org.openehr.rm.data_structures",
            "packages": {
                "item_structure": {
                    "name": "item_structure",
                    "classes": [
                        "ITEM_STRUCTURE",
                        "ITEM_TREE",
                        "ITEM_SINGLE",
                        "ITEM_TABLE",
                        "ITEM_LIST"
                    ]
                },
                "history": {
                    "name": "history",
                    "classes": [
                        "EVENT",
                        "POINT_EVENT",
                        "INTERVAL_EVENT",
                        "HISTORY"
                    ]
                },
                "representation": {
                    "name": "representation",
                    "classes": [
                        "ITEM",
                        "CLUSTER",
                        "ELEMENT"
                    ]
                }
            },
            "classes": [
                "DATA_STRUCTURE"
            ]
        },
        "org.openehr.rm.data_types": {
            "name": "org.openehr.rm.data_types",
            "packages": {
                "basic": {
                    "name": "basic",
                    "classes": [
                        "DATA_VALUE",
                        "DV_BOOLEAN",
                        "DV_STATE",
                        "DV_IDENTIFIER"
                    ]
                },
                "encapsulated": {
                    "name": "encapsulated",
                    "classes": [
                        "DV_ENCAPSULATED",
                        "DV_MULTIMEDIA",
                        "DV_PARSABLE"
                    ]
                },
                "text": {
                    "name": "text",
                    "classes": [
                        "DV_PARAGRAPH",
                        "DV_TEXT",
                        "DV_CODED_TEXT",
                        "TERM_MAPPING",
                        "CODE_PHRASE"
                    ]
                },
                "quantity": {
                    "name": "quantity",
                    "packages": {
                        "date_time": {
                            "name": "date_time",
                            "classes": [
                                "DV_DURATION",
                                "DV_TEMPORAL",
                                "DV_DATE",
                                "DV_TIME",
                                "DV_DATE_TIME"
                            ]
                        }
                    },
                    "classes": [
                        "DV_ORDERED",
                        "DV_INTERVAL",
                        "REFERENCE_RANGE",
                        "DV_QUANTIFIED",
                        "DV_PROPORTION",
                        "PROPORTION_KIND",
                        "DV_AMOUNT",
                        "DV_QUANTITY",
                        "DV_COUNT",
                        "DV_ABSOLUTE_QUANTITY",
                        "DV_ORDINAL",
                        "DV_SCALE"
                    ]
                },
                "time_specification": {
                    "name": "time_specification",
                    "classes": [
                        "DV_TIME_SPECIFICATION",
                        "DV_PERIODIC_TIME_SPECIFICATION",
                        "DV_GENERAL_TIME_SPECIFICATION"
                    ]
                },
                "uri": {
                    "name": "uri",
                    "classes": [
                        "DV_URI",
                        "DV_EHR_URI"
                    ]
                }
            }
        },
        "org.openehr.rm.support": {
            "name": "org.openehr.rm.support",
            "packages": {
                "measurement": {
                    "name": "measurement",
                    "classes": [
                        "MEASUREMENT_SERVICE"
                    ]
                },
                "terminology": {
                    "name": "terminology",
                    "classes": [
                        "OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS",
                        "OPENEHR_CODE_SET_IDENTIFIERS",
                        "TERMINOLOGY_SERVICE",
                        "CODE_SET_ACCESS",
                        "TERMINOLOGY_ACCESS"
                    ]
                }
            },
            "classes": [
                "EXTERNAL_ENVIRONMENT_ACCESS"
            ]
        },
        "org.openehr.rm.security": {
            "name": "org.openehr.rm.security",
            "packages": {
                "access_control": {
                    "name": "access_control",
                    "classes": [
                        "ACCESS_CONTROL_SETTINGS"
                    ]
                }
            }
        },
        "org.openehr.rm.ehr": {
            "name": "org.openehr.rm.ehr",
            "classes": [
                "EHR",
                "VERSIONED_EHR_ACCESS",
                "VERSIONED_EHR_STATUS",
                "VERSIONED_COMPOSITION",
                "EHR_ACCESS",
                "EHR_STATUS"
            ]
        },
        "org.openehr.rm.ehr_extract": {
            "name": "org.openehr.rm.ehr_extract",
            "packages": {
                "common": {
                    "name": "common",
                    "classes": [
                        "EXTRACT",
                        "EXTRACT_ACTION_REQUEST",
                        "EXTRACT_CHAPTER",
                        "EXTRACT_CONTENT_ITEM",
                        "EXTRACT_ENTITY_CHAPTER",
                        "EXTRACT_ENTITY_MANIFEST",
                        "EXTRACT_ERROR",
                        "EXTRACT_FOLDER",
                        "EXTRACT_ITEM",
                        "EXTRACT_MANIFEST",
                        "EXTRACT_PARTICIPATION",
                        "EXTRACT_REQUEST",
                        "EXTRACT_SPEC",
                        "EXTRACT_UPDATE_SPEC",
                        "EXTRACT_VERSION_SPEC"
                    ]
                },
                "openehr_extract": {
                    "name": "openehr_extract",
                    "classes": [
                        "OPENEHR_CONTENT_ITEM",
                        "X_VERSIONED_OBJECT",
                        "X_VERSIONED_EHR_ACCESS",
                        "X_VERSIONED_EHR_STATUS",
                        "X_VERSIONED_COMPOSITION",
                        "X_VERSIONED_FOLDER",
                        "X_VERSIONED_PARTY"
                    ]
                },
                "generic_extract": {
                    "name": "generic_extract",
                    "classes": [
                        "GENERIC_CONTENT_ITEM"
                    ]
                },
                "sync_extract": {
                    "name": "sync_extract",
                    "classes": [
                        "SYNC_EXTRACT_REQUEST",
                        "SYNC_EXTRACT",
                        "X_CONTRIBUTION",
                        "SYNC_EXTRACT_SPEC"
                    ]
                },
                "message": {
                    "name": "message",
                    "classes": [
                        "MESSAGE",
                        "ADDRESSED_MESSAGE",
                        "MESSAGE_CONTENT"
                    ]
                }
            }
        },
        "org.openehr.rm.demographic": {
            "name": "org.openehr.rm.demographic",
            "classes": [
                "PARTY",
                "CONTACT",
                "ADDRESS",
                "PARTY_IDENTITY",
                "ROLE",
                "ACTOR",
                "CAPABILITY",
                "AGENT",
                "ORGANISATION",
                "GROUP",
                "PERSON",
                "PARTY_RELATIONSHIP",
                "VERSIONED_PARTY"
            ]
        },
        "org.openehr.rm.integration": {
            "name": "org.openehr.rm.integration",
            "classes": [
                "GENERIC_ENTRY"
            ]
        },
        "org.openehr.rm.composition": {
            "name": "org.openehr.rm.composition",
            "packages": {
                "content": {
                    "name": "content",
                    "packages": {
                        "navigation": {
                            "name": "navigation",
                            "classes": [
                                "SECTION"
                            ]
                        },
                        "entry": {
                            "name": "entry",
                            "classes": [
                                "ADMIN_ENTRY",
                                "CARE_ENTRY",
                                "OBSERVATION",
                                "EVALUATION",
                                "ACTION",
                                "ACTIVITY",
                                "ISM_TRANSITION",
                                "INSTRUCTION_DETAILS",
                                "ENTRY",
                                "INSTRUCTION"
                            ]
                        }
                    },
                    "classes": [
                        "CONTENT_ITEM"
                    ]
                },
                "view": {
                    "name": "view",
                    "classes": [
                        "VIEW_ENTRY",
                        "VIEW_SECTION",
                        "CITATION",
                        "VIEW_ITEM",
                        "VIEW_STATUS"
                    ]
                }
            },
            "classes": [
                "COMPOSITION",
                "EVENT_CONTEXT"
            ]
        },
        "org.openehr.rm.resource": {
            "name": "org.openehr.rm.resource",
            "classes": [
                "SERVICE_USE",
                "RESOURCE_USE",
                "CONSUMABLE_USE",
                "RESOURCE_USAGE"
            ]
        }
    },
    "primitive_types": [],
    "class_definitions": {
        "PATHABLE": {
            "name": "PATHABLE",
            "is_abstract": true,
            "ancestors": [
                "Any"
            ],
            "documentation": "The `PATHABLE` class defines the pathing capabilities used by nearly all classes in the openEHR reference model, mostly via inheritance of `LOCATABLE`. The defining characteristics of `PATHABLE` objects are that they can locate child objects using paths, and they know their parent object in a compositional hierarchy. The parent feature is defined as abstract in the model, and may be implemented in any way convenient."
        },
        "LINK": {
            "name": "LINK",
            "documentation": "The `LINK` type defines a logical relationship between two items, such as two `ENTRYs` or an `ENTRY` and a `COMPOSITION`. Links can be used across compositions, and across EHRs. Links can potentially be used between interior (i.e. non archetype root) nodes, although this probably should be prevented in archetypes. Multiple `LINKs` can be attached to the root object of any archetyped structure to give the effect of a 1->N link.\n\n1:1 and 1:N relationships between archetyped content elements (e.g. `ENTRYs`) can be expressed by using one, or more than one, respectively, `LINKs`. Chains of links can be used to see  problem threads  or other logical groupings of items. \n\nLinks should be between archetyped structures only, i.e. between objects representing complete domain concepts because relationships between sub-elements of whole concepts are not necessarily meaningful, and may be downright confusing. Sensible links only exist between whole `ENTRYs`, `SECTIONs`, `COMPOSITIONs` and so on. ",
            "properties": {
                "meaning": {
                    "name": "meaning",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_TEXT",
                    "is_mandatory": true,
                    "documentation": "Used to describe the relationship, usually in clinical terms, such as  in response to  (the relationship between test results and an order),  follow-up to  and so on. Such relationships can represent any clinically meaningful connection between pieces of information. Values for meaning include those described in Annex C, ENV 13606 pt 2 under the categories of  generic ,  documenting and reporting ,  organisational ,  clinical ,  circumstancial , and  view management ."
                },
                "type": {
                    "name": "type",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_TEXT",
                    "is_mandatory": true,
                    "documentation": "The type attribute is used to indicate a clinical or domain-level meaning for the kind of link, for example  problem  or  issue . If type values are designed appropriately, they can be used by the requestor of EHR extracts to categorise links which must be followed and which can be broken when the extract is created. \n"
                },
                "target": {
                    "name": "target",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_EHR_URI",
                    "is_mandatory": true,
                    "documentation": "The logical  to  object in the link relation, as per the linguistic sense of the meaning attribute."
                }
            }
        },
        "LOCATABLE": {
            "name": "LOCATABLE",
            "is_abstract": true,
            "ancestors": [
                "PATHABLE"
            ],
            "documentation": "Root class of all information model classes that can be archetyped. Most classes in the openEHR reference model inherit from the `LOCATABLE` class, which defines the idea of  locatability in an archetyped structure. `LOCATABLE` defines a runtime name and an `_archetype_node_id_`. ",
            "properties": {
                "name": {
                    "name": "name",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_TEXT",
                    "is_mandatory": true,
                    "documentation": "Runtime name of this fragment, used to build runtime paths. This is the term provided via a clinical application or batch process to name this EHR construct: its retention in the EHR faithfully preserves the original label by which this entry was known to end users. \n"
                },
                "archetype_node_id": {
                    "name": "archetype_node_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Design-time archetype identifier of this node taken from its generating archetype; used to build archetype paths. Always in the form of an at-code, e.g.  `at0005`. This value enables a 'standardised' name for this node to be generated, by referring to the generating archetype local terminology. \n\nAt an archetype root point, the value of this attribute is always the stringified form of the `_archetype_id_` found in the `_archetype_details_` object. \n"
                },
                "uid": {
                    "name": "uid",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "UID_BASED_ID",
                    "documentation": "Optional globally unique object identifier for root points of archetyped structures. "
                },
                "links": {
                    "name": "links",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "LINK"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Links to other archetyped structures (data whose root object inherits from `ARCHETYPED`, such as `ENTRY`, `SECTION` and so on). Links may be to structures in other compositions. "
                },
                "archetype_details": {
                    "name": "archetype_details",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ARCHETYPED",
                    "documentation": "Details of archetyping used on this node."
                },
                "feeder_audit": {
                    "name": "feeder_audit",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "FEEDER_AUDIT",
                    "documentation": "Audit trail from non-openEHR system of original commit of information forming the content of this node, or from a conversion gateway which has synthesised this node. "
                }
            }
        },
        "ARCHETYPED": {
            "name": "ARCHETYPED",
            "documentation": "Archetypes act as the configuration basis for the particular structures of instances defined by the reference model. To enable archetypes to be used to create valid data, key classes in the reference model act as  root  points for archetyping; accordingly, these classes have the `_archetype_details_` attribute set. \n\nAn instance of the class `ARCHETYPED` contains the relevant archetype identification information, allowing generating archetypes to be matched up with data instances.",
            "properties": {
                "archetype_id": {
                    "name": "archetype_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ARCHETYPE_ID",
                    "is_mandatory": true,
                    "documentation": "Globally unique archetype identifier. "
                },
                "template_id": {
                    "name": "template_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "TEMPLATE_ID",
                    "documentation": "Globally unique template identifier, if a template was active at this point in the structure. Normally, a template would only be used at the top of a top-level structure, but the possibility exists for templates at lower levels. "
                },
                "rm_version": {
                    "name": "rm_version",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Version of the openEHR reference model used to create this object. Expressed in terms of the release version string, e.g.  1.0 ,  1.2.4 ."
                }
            }
        },
        "FEEDER_AUDIT": {
            "name": "FEEDER_AUDIT",
            "documentation": "The `FEEDER_AUDIT` class defines the semantics of an audit trail which is constructed to describe the origin of data that have been transformed into openEHR form and committed to the system. ",
            "properties": {
                "originating_system_item_ids": {
                    "name": "originating_system_item_ids",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "DV_IDENTIFIER"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Identifiers used for the item in the originating system, e.g. filler and placer ids. "
                },
                "feeder_system_item_ids": {
                    "name": "feeder_system_item_ids",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "DV_IDENTIFIER"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Identifiers used for the item in the feeder system, where the feeder system is distinct from the originating system. "
                },
                "original_content": {
                    "name": "original_content",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_ENCAPSULATED",
                    "documentation": "Optional inline inclusion of or reference to original content corresponding to the openEHR content at this node. Typically a URI reference to a document or message in a persistent store associated with the EHR. "
                },
                "originating_system_audit": {
                    "name": "originating_system_audit",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "FEEDER_AUDIT_DETAILS",
                    "is_mandatory": true,
                    "documentation": "Any audit information for the information item from the originating system. "
                },
                "feeder_system_audit": {
                    "name": "feeder_system_audit",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "FEEDER_AUDIT_DETAILS",
                    "documentation": "Any audit information for the information item from the feeder system, if different from the originating system."
                }
            }
        },
        "FEEDER_AUDIT_DETAILS": {
            "name": "FEEDER_AUDIT_DETAILS",
            "documentation": "Audit details for any system in a feeder system chain. Audit details here means the general notion of who\/where\/when the information item to which the audit is attached was created. None of the attributes is defined as mandatory, however, in different scenarios, various combinations of attributes will usually be mandatory. This can be controlled by specifying feeder audit details in legacy archetypes. ",
            "properties": {
                "system_id": {
                    "name": "system_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Identifier of the system which handled the information item. This is the IT system owned by the organisation legally responsible for handling the data, and at which the data were previously created or passed by an earlier system.\n"
                },
                "location": {
                    "name": "location",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_IDENTIFIED",
                    "documentation": "Identifier of the particular site\/facility within an organisation which handled the item. For computability, this identifier needs to be e.g. a PKI identifier which can be included in the identifier list of the `PARTY_IDENTIFIED` object. "
                },
                "subject": {
                    "name": "subject",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_PROXY",
                    "documentation": "Identifiers for subject of the received information item. "
                },
                "provider": {
                    "name": "provider",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_IDENTIFIED",
                    "documentation": "Optional provider(s) who created, committed, forwarded or otherwise handled the item. "
                },
                "time": {
                    "name": "time",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "documentation": "Time of handling the item. For an originating system, this will be time of creation, for an intermediate feeder system, this will be a time of accession or other time of handling, where available."
                },
                "version_id": {
                    "name": "version_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Any identifier used in the system such as  \"interim\" ,  \"final\" , or numeric versions if available. "
                },
                "other_details": {
                    "name": "other_details",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "documentation": "Optional attribute to carry any custom meta-data. May be archetyped."
                }
            }
        },
        "VERSIONED_OBJECT": {
            "name": "VERSIONED_OBJECT",
            "documentation": "Version control abstraction, defining semantics for versioning one complex object.",
            "generic_parameter_defs": {
                "T": {
                    "name": "T"
                }
            },
            "properties": {
                "uid": {
                    "name": "uid",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "HIER_OBJECT_ID",
                    "is_mandatory": true,
                    "documentation": "Unique identifier of this version container in the form of a UID with no extension. This id will be the same in all instances of the same container in a distributed environment, meaning that it can be understood as the uid of the  virtual version tree. "
                },
                "owner_id": {
                    "name": "owner_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_REF",
                    "is_mandatory": true,
                    "documentation": "Reference to object to which this version container belongs, e.g. the id of the containing EHR or other relevant owning entity. "
                },
                "time_created": {
                    "name": "time_created",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "is_mandatory": true,
                    "documentation": "Time of initial creation of this versioned object. "
                }
            }
        },
        "CONTRIBUTION": {
            "name": "CONTRIBUTION",
            "documentation": "Documents a Contribution (change set) of one or more versions added to a change-controlled repository. ",
            "properties": {
                "uid": {
                    "name": "uid",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "HIER_OBJECT_ID",
                    "is_mandatory": true,
                    "documentation": "Unique identifier for this Contribution. "
                },
                "versions": {
                    "name": "versions",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "OBJECT_REF"
                    },
                    "cardinality": "|>=1|",
                    "is_mandatory": true,
                    "documentation": "Set of references to Versions causing changes to this EHR. Each contribution contains a list of versions, which may include paths pointing to any number of versionable items, i.e. items of types such as `COMPOSITION` and `FOLDER`. "
                },
                "audit": {
                    "name": "audit",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "AUDIT_DETAILS",
                    "is_mandatory": true,
                    "documentation": "Audit trail corresponding to the committal of this Contribution. "
                }
            }
        },
        "VERSION": {
            "name": "VERSION",
            "is_abstract": true,
            "documentation": "Abstract model of one Version within a Version container, containing data, commit audit trail, and the identifier of its Contribution.",
            "generic_parameter_defs": {
                "T": {
                    "name": "T"
                }
            },
            "properties": {
                "contribution": {
                    "name": "contribution",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_REF",
                    "is_mandatory": true,
                    "documentation": "Contribution in which this version was added. "
                },
                "signature": {
                    "name": "signature",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "OpenPGP digital signature or digest of content committed in this Version. "
                },
                "commit_audit": {
                    "name": "commit_audit",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "AUDIT_DETAILS",
                    "is_mandatory": true,
                    "documentation": "Audit trail corresponding to the committal of this version to the `VERSIONED_OBJECT`."
                }
            }
        },
        "IMPORTED_VERSION": {
            "name": "IMPORTED_VERSION",
            "ancestors": [
                "VERSION"
            ],
            "documentation": "Versions whose content is an `ORIGINAL_VERSION` copied from another location; this class inherits `_commit_audit_` and `_contribution_` from `VERSION<T>`, providing imported versions with their own audit trail and Contribution, distinct from those of the imported `ORIGINAL_VERSION`. ",
            "generic_parameter_defs": {
                "T": {
                    "name": "T"
                }
            },
            "properties": {
                "item": {
                    "name": "item",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ORIGINAL_VERSION",
                    "is_mandatory": true,
                    "documentation": "The `ORIGINAL_VERSION` object that was imported. "
                }
            }
        },
        "ORIGINAL_VERSION": {
            "name": "ORIGINAL_VERSION",
            "ancestors": [
                "VERSION"
            ],
            "documentation": "A Version containing locally created content and optional attestations. ",
            "generic_parameter_defs": {
                "T": {
                    "name": "T"
                }
            },
            "properties": {
                "uid": {
                    "name": "uid",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_VERSION_ID",
                    "is_mandatory": true,
                    "documentation": "Stored version of inheritance precursor. "
                },
                "preceding_version_uid": {
                    "name": "preceding_version_uid",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_VERSION_ID",
                    "documentation": "Stored version of inheritance precursor. "
                },
                "other_input_version_uids": {
                    "name": "other_input_version_uids",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "OBJECT_VERSION_ID"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Identifiers of other versions whose content was merged into this version, if any. "
                },
                "lifecycle_state": {
                    "name": "lifecycle_state",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "is_mandatory": true,
                    "documentation": "Lifecycle state of the content item in this version; coded by openEHR vocabulary `version lifecycle state`."
                },
                "attestations": {
                    "name": "attestations",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "ATTESTATION"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Set of attestations relating to this version. "
                },
                "data": {
                    "name": "data",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "T",
                    "documentation": "Data content of this Version."
                }
            }
        },
        "REVISION_HISTORY_ITEM": {
            "name": "REVISION_HISTORY_ITEM",
            "documentation": "An entry in a revision history, corresponding to a version from a versioned container. Consists of `AUDIT_DETAILS` instances with revision identifier of the revision to which the `AUDIT_DETAILS` instance belongs. ",
            "properties": {
                "version_id": {
                    "name": "version_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_VERSION_ID",
                    "is_mandatory": true,
                    "documentation": "Version identifier for this revision. "
                },
                "audits": {
                    "name": "audits",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "AUDIT_DETAILS"
                    },
                    "cardinality": "|>=1|",
                    "is_mandatory": true,
                    "documentation": "The audits for this revision; there will always be at least one commit audit (which may itself be an `ATTESTATION`), there may also be further attestations. "
                }
            }
        },
        "AUDIT_DETAILS": {
            "name": "AUDIT_DETAILS",
            "documentation": "The set of attributes required to document the committal of an information item to a repository. ",
            "properties": {
                "system_id": {
                    "name": "system_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Identifier of the logical EHR system where the change was committed. This is almost always owned by the organisation legally responsible for the EHR, and is distinct from any application, or any hosting infrastructure."
                },
                "time_committed": {
                    "name": "time_committed",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "is_mandatory": true,
                    "documentation": "Time of committal of the item. "
                },
                "change_type": {
                    "name": "change_type",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "is_mandatory": true,
                    "documentation": "Type of change. Coded using the openEHR Terminology  audit change type  group."
                },
                "description": {
                    "name": "description",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_TEXT",
                    "documentation": "Reason for committal. This may be used to qualify the value in the `_change_type_` field. For example, if the change affects only the EHR directory, this field might be used to indicate 'Folder \"episode 2018-02-16\" added' or similar."
                },
                "committer": {
                    "name": "committer",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_PROXY",
                    "is_mandatory": true,
                    "documentation": "Identity and optional reference into identity management service, of user who committed the item. "
                }
            }
        },
        "ATTESTATION": {
            "name": "ATTESTATION",
            "ancestors": [
                "AUDIT_DETAILS"
            ],
            "documentation": "Record an attestation of a party (the committer) to item(s) of record content. An attestation is an explicit signing by one healthcare agent of particular content for various particular purposes, including:\n\n* for authorisation of a controlled substance or procedure (e.g. sectioning of patient under mental health act); \n* witnessing of content by senior clinical professional; \n* indicating acknowledgement of content by intended recipient, e.g. GP who ordered a test result. \n",
            "properties": {
                "attested_view": {
                    "name": "attested_view",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_MULTIMEDIA",
                    "documentation": "Optional visual representation of content attested e.g. screen image. "
                },
                "proof": {
                    "name": "proof",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Proof of attestation. "
                },
                "items": {
                    "name": "items",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "DV_EHR_URI"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Items attested, expressed as fully qualified runtime paths to the items in question. Although not recommended, these may include fine-grained items which have been attested in some other system. Otherwise it is assumed to be for the entire VERSION with which it is associated. "
                },
                "reason": {
                    "name": "reason",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_TEXT",
                    "is_mandatory": true,
                    "documentation": "Reason of this attestation. Optionally coded by the openEHR Terminology group  attestation reason ; includes values like  authorisation ,  witness  etc. "
                },
                "is_pending": {
                    "name": "is_pending",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "is_mandatory": true,
                    "documentation": "True if this attestation is outstanding; False means it has been completed."
                }
            }
        },
        "PARTICIPATION": {
            "name": "PARTICIPATION",
            "documentation": "Model of a participation of a Party (any Actor or Role) in an activity.  Used to represent any participation of a Party in some activity, which is not  explicitly in the model, e.g. assisting nurse. Can be used to record past or  future participations. \n\nShould not be used in place of more permanent relationships between demographic entities. ",
            "properties": {
                "function": {
                    "name": "function",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_TEXT",
                    "is_mandatory": true,
                    "documentation": "The function of the Party in this participation (note that a given party might participate in more than one way in a particular activity). This attribute should be coded, but cannot be limited to the HL7v3:ParticipationFunction vocabulary, since it is too limited and hospital-oriented. "
                },
                "mode": {
                    "name": "mode",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "documentation": "Optional field for recording the 'mode' of the performer \/ activity interaction, e.g. present, by telephone, by email etc. "
                },
                "performer": {
                    "name": "performer",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_PROXY",
                    "is_mandatory": true,
                    "documentation": "The id and possibly demographic system link of the party participating in the activity. "
                },
                "time": {
                    "name": "time",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "DV_INTERVAL",
                        "generic_parameters": [
                            "DV_DATE_TIME"
                        ]
                    },
                    "documentation": "The time interval during which the participation took place, if it is used in an observational context (i.e. recording facts about the past); or the intended time interval of the participation when used in future contexts, such as EHR Instructions. "
                }
            }
        },
        "PARTY_PROXY": {
            "name": "PARTY_PROXY",
            "is_abstract": true,
            "documentation": "Abstract concept of a proxy description of a party, including an optional link to data for this party in a demographic or other identity management system. Sub- typed into `PARTY_IDENTIFIED` and `PARTY_SELF`. ",
            "properties": {
                "external_ref": {
                    "name": "external_ref",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_REF",
                    "documentation": "Optional reference to more detailed demographic or identification information for this party, in an external system. "
                }
            }
        },
        "PARTY_IDENTIFIED": {
            "name": "PARTY_IDENTIFIED",
            "ancestors": [
                "PARTY_PROXY"
            ],
            "documentation": "Proxy data for an identified party other than the subject of the record, minimally consisting of human-readable identifier(s), such as name, formal (and possibly computable) identifiers such as NHS number, and an optional link to external data. There must be at least one of name, identifier or external_ref present.\n\nUsed to describe parties where only identifiers may be known, and there is no entry at all in the demographic system (or even no demographic system). Typically for health care providers, e.g. name and provider number of an institution. \n\nShould not be used to include patient identifying information. ",
            "properties": {
                "name": {
                    "name": "name",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Optional human-readable name (in String form)."
                },
                "identifiers": {
                    "name": "identifiers",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "DV_IDENTIFIER"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "One or more formal identifiers (possibly computable). \n"
                }
            }
        },
        "PARTY_SELF": {
            "name": "PARTY_SELF",
            "ancestors": [
                "PARTY_PROXY"
            ],
            "documentation": "Party proxy representing the subject of the record. Used to indicate that the party is the owner of the record. May or may not have `_external_ref_` set. "
        },
        "PARTY_RELATED": {
            "name": "PARTY_RELATED",
            "ancestors": [
                "PARTY_IDENTIFIED"
            ],
            "documentation": "Proxy type for identifying a party and its relationship to the subject of the record. Use where the relationship between the party and the subject of the record must be known. ",
            "properties": {
                "relationship": {
                    "name": "relationship",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "is_mandatory": true,
                    "documentation": "Relationship of subject of this ENTRY to the subject of the record. May be coded. If it is the patient, coded as  self. "
                }
            }
        },
        "REVISION_HISTORY": {
            "name": "REVISION_HISTORY",
            "documentation": "Purpose Defines the notion of a revision history of audit items, each associated with the version for which that audit was committed. The list is in most-recent-first order. ",
            "properties": {
                "items": {
                    "name": "items",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "REVISION_HISTORY_ITEM"
                    },
                    "cardinality": "|>=1|",
                    "is_mandatory": true,
                    "documentation": "The items in this history in most-recent-last order. "
                }
            }
        },
        "VERSIONED_FOLDER": {
            "name": "VERSIONED_FOLDER",
            "ancestors": [
                "VERSIONED_OBJECT"
            ],
            "documentation": "A version-controlled hierarchy of `FOLDERs` giving the effect of a directory. "
        },
        "FOLDER": {
            "name": "FOLDER",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "The concept of a named folder.\n\nNOTE: It is strongly recommended that the inherited attribute `_uid_` be populated in _top-level_ (i.e. tree-root) `FOLDER` objects, using the UID copied from the `_object_id()_` of the `_uid_` field of the enclosing `VERSION` object. +\nFor example, the `ORIGINAL_VERSION.uid` `87284370-2D4B-4e3d-A3F3-F303D2F4F34B::uk.nhs.ehr1::2`  would be copied to the `_uid_` field of the top `FOLDER` object.",
            "properties": {
                "items": {
                    "name": "items",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "OBJECT_REF"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "The list of references to other (usually) versioned objects logically in this folder. "
                },
                "folders": {
                    "name": "folders",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "FOLDER"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Sub-folders of this `FOLDER`. "
                },
                "details": {
                    "name": "details",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "documentation": "Archetypable meta-data for `FOLDER`."
                }
            }
        },
        "AUTHORED_RESOURCE": {
            "name": "AUTHORED_RESOURCE",
            "is_abstract": true,
            "documentation": "Abstract idea of an online resource created by a human author. \n",
            "properties": {
                "original_language": {
                    "name": "original_language",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "is_mandatory": true,
                    "documentation": "Language in which this resource was initially authored. Although there is no language primacy of resources overall, the language of original authoring is required to ensure natural language translations can preserve quality. Language is relevant in both the description and ontology sections. "
                },
                "is_controlled": {
                    "name": "is_controlled",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "documentation": "True if this resource is under any kind of change control (even file copying), in which case revision history is created. "
                },
                "translations": {
                    "name": "translations",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "Hash",
                        "generic_parameters": [
                            "String",
                            "TRANSLATION_DETAILS"
                        ]
                    },
                    "documentation": "List of details for each natural-language translation made of this resource, keyed by language. For each translation listed here, there must be corresponding sections in all language-dependent parts of the resource. The `_original_language_` does not appear in this list."
                },
                "description": {
                    "name": "description",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "RESOURCE_DESCRIPTION",
                    "documentation": "Description and lifecycle information of the resource."
                },
                "revision_history": {
                    "name": "revision_history",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "REVISION_HISTORY",
                    "documentation": "The revision history of the resource. Only required if `_is_controlled_ = True` (avoids large revision histories for informal or private editing situations). "
                }
            }
        },
        "RESOURCE_DESCRIPTION": {
            "name": "RESOURCE_DESCRIPTION",
            "documentation": "Defines the descriptive meta-data of a resource.",
            "properties": {
                "original_author": {
                    "name": "original_author",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "Hash",
                        "generic_parameters": [
                            "String",
                            "String"
                        ]
                    },
                    "is_mandatory": true,
                    "documentation": "Original author of this resource, with all relevant details, including organisation."
                },
                "other_contributors": {
                    "name": "other_contributors",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "String"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Other contributors to the resource, probably listed in  `'name <email>'`  form. "
                },
                "lifecycle_state": {
                    "name": "lifecycle_state",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Lifecycle state of the resource, typically including states such as: `initial | submitted | experimental | awaiting_approval | approved | superseded | obsolete`."
                },
                "resource_package_uri": {
                    "name": "resource_package_uri",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "URI of package to which this resource belongs."
                },
                "other_details": {
                    "name": "other_details",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "Hash",
                        "generic_parameters": [
                            "String",
                            "String"
                        ]
                    },
                    "documentation": "Additional non language-senstive resource meta-data, as a list of name\/value pairs. "
                },
                "parent_resource": {
                    "name": "parent_resource",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "AUTHORED_RESOURCE",
                    "is_mandatory": true,
                    "documentation": "Reference to owning resource. "
                },
                "details": {
                    "name": "details",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "Hash",
                        "generic_parameters": [
                            "String",
                            "RESOURCE_DESCRIPTION_ITEM"
                        ]
                    },
                    "is_mandatory": true,
                    "documentation": "Details of all parts of resource description that are natural language-dependent, keyed by language code. "
                }
            }
        },
        "TRANSLATION_DETAILS": {
            "name": "TRANSLATION_DETAILS",
            "documentation": "Class providing details of a natural language translation. ",
            "properties": {
                "language": {
                    "name": "language",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "is_mandatory": true,
                    "documentation": "Language of the translation."
                },
                "author": {
                    "name": "author",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "Hash",
                        "generic_parameters": [
                            "String",
                            "String"
                        ]
                    },
                    "is_mandatory": true,
                    "documentation": "Translator name and other demographic details."
                },
                "accreditaton": {
                    "name": "accreditaton",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Accreditation of translator, usually a national translator's registration or association membership id."
                },
                "other_details": {
                    "name": "other_details",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "Hash",
                        "generic_parameters": [
                            "String",
                            "String"
                        ]
                    },
                    "documentation": "Any other meta-data."
                }
            }
        },
        "RESOURCE_DESCRIPTION_ITEM": {
            "name": "RESOURCE_DESCRIPTION_ITEM",
            "documentation": "Language-specific detail of resource description. When a resource is translated for use in another language environment, each `RESOURCE_DESCRIPTION_ITEM` needs to be copied and translated into the new language.",
            "properties": {
                "language": {
                    "name": "language",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "is_mandatory": true,
                    "documentation": "The localised language in which the items in this description item are written. Coded from openEHR code set `languages`."
                },
                "purpose": {
                    "name": "purpose",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Purpose of the resource."
                },
                "keywords": {
                    "name": "keywords",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "String"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Keywords which characterise this resource, used e.g. for indexing and searching. "
                },
                "use": {
                    "name": "use",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Description of the uses of the resource, i.e. contexts in which it could be used. \n"
                },
                "misuse": {
                    "name": "misuse",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Description of any misuses of the resource, i.e. contexts in which it should not be used."
                },
                "copyright": {
                    "name": "copyright",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Optional copyright statement for the resource as a knowledge resource. \n"
                },
                "original_resource_uri": {
                    "name": "original_resource_uri",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "Hash",
                        "generic_parameters": [
                            "String",
                            "String"
                        ]
                    },
                    "documentation": "URIs of original clinical document(s) or description of which resource is a formalisation, in the language of this description item; keyed by meaning. "
                },
                "other_details": {
                    "name": "other_details",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "Hash",
                        "generic_parameters": [
                            "String",
                            "String"
                        ]
                    },
                    "documentation": "Additional language-senstive resource metadata, as a list of name\/value pairs. "
                }
            }
        },
        "ITEM_TAG": {
            "name": "ITEM_TAG",
            "documentation": "A tag with optional value that is associated with a target information entity identified by a UID.",
            "properties": {
                "target": {
                    "name": "target",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "UID_BASED_ID",
                    "is_mandatory": true,
                    "documentation": "Identifier of target, which may be a `VERSIONED_OBJECT<T>` or a `VERSION<T>`."
                },
                "target_path": {
                    "name": "target_path",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Optional archetype (i.e. AQL) or RM path within `_target_`, in order to tag a fine-grained element."
                },
                "key": {
                    "name": "key",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "The tag key. May not be empty or contain leading or trailing whitespace."
                },
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "The value. If set, may not be empty."
                },
                "owner_id": {
                    "name": "owner_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_REF",
                    "is_mandatory": true,
                    "documentation": "Identifier of owner object, such as EHR."
                }
            }
        },
        "DATA_STRUCTURE": {
            "name": "DATA_STRUCTURE",
            "is_abstract": true,
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Abstract parent class of all data structure types. Includes the `_as_hierarchy_` function which can generate the equivalent CEN EN13606 single hierarchy for each subtype's physical representation. For example, the physical representation of an `ITEM_LIST` is `List<ELEMENT>`; its implementation of `_as_hierarchy_` will generate a `CLUSTER` containing the set of `ELEMENT` nodes from the list. "
        },
        "ITEM_STRUCTURE": {
            "name": "ITEM_STRUCTURE",
            "is_abstract": true,
            "ancestors": [
                "DATA_STRUCTURE"
            ],
            "documentation": "Abstract parent class of all spatial data types. "
        },
        "ITEM_TREE": {
            "name": "ITEM_TREE",
            "ancestors": [
                "ITEM_STRUCTURE"
            ],
            "documentation": "Logical tree data structure. The tree may be empty. Used for representing data which are logically a tree such as audiology results, microbiology results, biochemistry results.",
            "properties": {
                "items": {
                    "name": "items",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "ITEM"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "The items comprising the `ITEM_TREE`. Can include 0 or more `CLUSTERs` and\/or 0 or more individual `ELEMENTs`."
                }
            }
        },
        "ITEM_SINGLE": {
            "name": "ITEM_SINGLE",
            "ancestors": [
                "ITEM_STRUCTURE"
            ],
            "documentation": "Logical single value data structure. Used to represent any data which is logically a single value, such as a person's height or weight.",
            "properties": {
                "item": {
                    "name": "item",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ELEMENT",
                    "is_mandatory": true,
                    "documentation": ""
                }
            }
        },
        "ITEM_TABLE": {
            "name": "ITEM_TABLE",
            "ancestors": [
                "ITEM_STRUCTURE"
            ],
            "documentation": "Logical relational database style table data structure, in which columns are named and ordered with respect to each other. Implemented using Cluster-per-row encoding. Each row Cluster must have an identical number of Elements, each of which in turn must have identical names and value types in the corresponding positions in each row. \n\nSome columns may be designated  key' columns, containing key data for each row, in the manner of relational tables. This allows row-naming, where each row represents a body site, a blood antigen etc. All values in a column have the same data type. \n\nUsed for representing any data which is logically a table of values, such as blood pressure, most protocols, many blood tests etc. \n\nMisuse: Not to be used for time-based data, which should be represented with the temporal class `HISTORY`. The table may be empty. ",
            "properties": {
                "rows": {
                    "name": "rows",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "CLUSTER"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Physical representation of the table as a list of `CLUSTERs`, each containing the data of one row of the table. "
                }
            }
        },
        "ITEM_LIST": {
            "name": "ITEM_LIST",
            "ancestors": [
                "ITEM_STRUCTURE"
            ],
            "documentation": "Logical list data structure, where each item has a value and can be referred to by a name and a positional index in the list. The list may be empty. \n\n`ITEM_LIST` is used to represent any data which is logically a list of values, such as blood pressure, most protocols, many blood tests etc. \n\nNot to be used for time-based lists, which should be represented with the proper temporal class, i.e. `HISTORY`.",
            "properties": {
                "items": {
                    "name": "items",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "ELEMENT"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Physical representation of the list. "
                }
            }
        },
        "EVENT": {
            "name": "EVENT",
            "is_abstract": true,
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Defines the abstract notion of a single event in a series. This class is generic, allowing types to be generated which are locked to particular spatial types, such as `EVENT<ITEM_LIST>`. Subtypes express point or intveral data. ",
            "generic_parameter_defs": {
                "T": {
                    "name": "T",
                    "conforms_to_type": "ITEM_STRUCTURE"
                }
            },
            "properties": {
                "time": {
                    "name": "time",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "is_mandatory": true,
                    "documentation": "Time of this event. If the width is non-zero, it is the time point of the trailing edge of the event. "
                },
                "state": {
                    "name": "state",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "documentation": "Optional state data for this event."
                },
                "data": {
                    "name": "data",
                    "_type": "P_BMM_SINGLE_PROPERTY_OPEN",
                    "type": "T",
                    "is_mandatory": true,
                    "documentation": "The data of this event."
                }
            }
        },
        "POINT_EVENT": {
            "name": "POINT_EVENT",
            "ancestors": [
                "EVENT"
            ],
            "documentation": "Defines a single point event in a series.",
            "generic_parameter_defs": {
                "T": {
                    "name": "T"
                }
            }
        },
        "INTERVAL_EVENT": {
            "name": "INTERVAL_EVENT",
            "ancestors": [
                "EVENT"
            ],
            "documentation": "Defines a single interval event in a series. ",
            "generic_parameter_defs": {
                "T": {
                    "name": "T"
                }
            },
            "properties": {
                "width": {
                    "name": "width",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DURATION",
                    "is_mandatory": true,
                    "documentation": "Duration of the time interval during which the values recorded under `data` are true and, if set, the values recorded under `state` are true. Void if an instantaneous event."
                },
                "sample_count": {
                    "name": "sample_count",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "documentation": "Optional count of original samples to which this event corresponds."
                },
                "math_function": {
                    "name": "math_function",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "is_mandatory": true,
                    "documentation": "Mathematical function of the data of this event, e.g.  maximum, mean etc. Coded using https:\/\/github.com\/openEHR\/terminology\/blob\/master\/openEHR_RM\/en\/openehr_terminology.xml[openEHR vocabulary `event math function`]. Default value `640|actual|`, meaning 'actual value'."
                }
            }
        },
        "HISTORY": {
            "name": "HISTORY",
            "ancestors": [
                "DATA_STRUCTURE"
            ],
            "documentation": "Root object of a linear history, i.e. time series structure. This is a generic class whose type parameter must be a descendant of `ITEM_STRUCTURE`, ensuring that each Event in the `_events_` of a given instance is of the same structural type, i.e. `ITEM_TREE`, `ITEM_LIST` etc.\n\nFor a periodic series of events, period will be set, and the time of each Event in the History must correspond; i.e. the `EVENT._offset_` must be a multiple of period for each Event. Missing events in a period History are however allowed. ",
            "generic_parameter_defs": {
                "T": {
                    "name": "T",
                    "conforms_to_type": "ITEM_STRUCTURE"
                }
            },
            "properties": {
                "origin": {
                    "name": "origin",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "is_mandatory": true,
                    "documentation": "Time origin of this event history. The first event is not necessarily at the origin point. "
                },
                "period": {
                    "name": "period",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DURATION",
                    "documentation": "Period between samples in this segment if periodic."
                },
                "duration": {
                    "name": "duration",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DURATION",
                    "documentation": "Duration of the entire History; either corresponds to the duration of all the events, and\/or the duration represented by the summary, if it exists. "
                },
                "summary": {
                    "name": "summary",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "documentation": "Optional summary data that aggregates, organizes, reduces and transforms the event series. This may be a text or image that presents a graphical presentation, or some data that assists with the interpretation of the data."
                },
                "events": {
                    "name": "events",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "EVENT"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "The events in the series. This attribute is of a generic type whose parameter must be a descendant of `ITEM_SUTRUCTURE`."
                }
            }
        },
        "ITEM": {
            "name": "ITEM",
            "is_abstract": true,
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "The abstract parent of `CLUSTER` and `ELEMENT` representation classes. "
        },
        "CLUSTER": {
            "name": "CLUSTER",
            "ancestors": [
                "ITEM"
            ],
            "documentation": "The grouping variant of `ITEM`, which may contain further instances of `ITEM`, in an ordered list. ",
            "properties": {
                "items": {
                    "name": "items",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "ITEM"
                    },
                    "cardinality": "|>=1|",
                    "is_mandatory": true,
                    "documentation": "Ordered list of items - `CLUSTER` or `ELEMENT` objects - under this `CLUSTER`. "
                }
            }
        },
        "ELEMENT": {
            "name": "ELEMENT",
            "ancestors": [
                "ITEM"
            ],
            "documentation": "The leaf variant of `ITEM`, to which a `DATA_VALUE` instance is attached. ",
            "properties": {
                "null_flavour": {
                    "name": "null_flavour",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "documentation": "Flavour of null value, e.g. `253|unknown|`, `271|no information|`, `272|masked|`, and `273|not applicable|`."
                },
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DATA_VALUE",
                    "documentation": "Property representing leaf value object of `ELEMENT`. In real data, any concrete subtype of `DATA_VALUE` can be used."
                },
                "null_reason": {
                    "name": "null_reason",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_TEXT",
                    "documentation": "Optional specific reason for null value; if set, `_null_flavour_` must be set. Null reason may apply only to a minority of clinical data, commonly needed in reporting contexts."
                }
            }
        },
        "DATA_VALUE": {
            "name": "DATA_VALUE",
            "is_abstract": true,
            "ancestors": [
                "OPENEHR_DEFINITIONS"
            ],
            "documentation": "Abstract parent of all `DV_` data value types."
        },
        "DV_BOOLEAN": {
            "name": "DV_BOOLEAN",
            "ancestors": [
                "DATA_VALUE"
            ],
            "documentation": "Items which are truly boolean data, such as true\/false or yes\/no answers. For such data, it is important to devise the meanings (usually questions in subjective data)  carefully, so that the only allowed results are in fact true or false. \n\nMisuse: The DV_BOOLEAN class should not be used as a replacement for naively modelled enumerated types such as male\/female etc. Such values should be coded, and in any case the enumeration often has more than two values. \n",
            "properties": {
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "is_mandatory": true,
                    "documentation": "Boolean value of this item. Actual values may be language or implementation dependent."
                }
            }
        },
        "DV_STATE": {
            "name": "DV_STATE",
            "ancestors": [
                "DATA_VALUE"
            ],
            "documentation": "For representing state values which obey a defined state machine, such as a variable  representing the states of an instruction or care process. \n\nDV_STATE is expressed as a String but its values are driven by archetype-defined  state machines. This provides a powerful way of capturing stateful complex processes  in simple data. \n",
            "properties": {
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "is_mandatory": true,
                    "documentation": "The state name. State names are determined by a state\/event table defined in archetypes, and coded using openEHR Terminology or local archetype terms, as specified by the archetype. "
                },
                "is_terminal": {
                    "name": "is_terminal",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "is_mandatory": true,
                    "documentation": "Indicates whether this state is a terminal state, such as  \"aborted\",  \"completed\" etc. from which no further transitions are possible."
                }
            }
        },
        "DV_IDENTIFIER": {
            "name": "DV_IDENTIFIER",
            "ancestors": [
                "DATA_VALUE"
            ],
            "documentation": "Type for representing identifiers of real-world entities. Typical identifiers include drivers licence number, social security number, veterans affairs number, prescription id, order id, and so on.\n\nDV_IDENTIFIER is used to represent any identifier of a real thing, issued by some authority or agency. \n\nMisuse: DV_IDENTIFIER is not used to express identifiers generated by the infrastructure to refer to information items; the types OBJECT_ID and OBJECT_REF and subtypes are defined for this purpose.",
            "properties": {
                "issuer": {
                    "name": "issuer",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Optional authority which issues the kind of id used in the id field of this object. "
                },
                "assigner": {
                    "name": "assigner",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Optional organisation that assigned the id to the item being identified."
                },
                "id": {
                    "name": "id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "The identifier value. Often structured, according to the definition of the issuing authority's rules. "
                },
                "type": {
                    "name": "type",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Optional identifier type, such as  prescription , or  Social Security Number . One day a controlled vocabulary might be possible for this."
                }
            }
        },
        "DV_ENCAPSULATED": {
            "name": "DV_ENCAPSULATED",
            "is_abstract": true,
            "ancestors": [
                "DATA_VALUE"
            ],
            "documentation": "Abstract class defining the common meta-data of all types of encapsulated data.",
            "properties": {
                "charset": {
                    "name": "charset",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "documentation": "Name of character encoding scheme in which this value is encoded. Coded from openEHR Code Set  character sets . Unicode is the default assumption in openEHR, with UTF-8 being the assumed encoding. This attribute allows for variations from these assumptions. "
                },
                "language": {
                    "name": "language",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "documentation": "Optional indicator of the localised language in which the data is written, if relevant. Coded from openEHR Code Set `languages`."
                }
            }
        },
        "DV_MULTIMEDIA": {
            "name": "DV_MULTIMEDIA",
            "ancestors": [
                "DV_ENCAPSULATED"
            ],
            "documentation": "A specialisation of `DV_ENCAPSULATED` for audiovisual and bio-signal types. Includes further metadata relating to multimedia types which are not applicable to other subtypes of `DV_ENCAPSULATED`.",
            "properties": {
                "alternate_text": {
                    "name": "alternate_text",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Text to display in lieu of multimedia display\/replay."
                },
                "uri": {
                    "name": "uri",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_URI",
                    "documentation": "URI reference to electronic information stored outside the record as a file, database entry etc, if supplied as a reference. \n"
                },
                "data": {
                    "name": "data",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "Byte"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "The actual data found at `_uri_`, if supplied inline."
                },
                "media_type": {
                    "name": "media_type",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "is_mandatory": true,
                    "documentation": "Data media type coded from openEHR code set  media types  (interface for the IANA MIME types code set). \n"
                },
                "compression_algorithm": {
                    "name": "compression_algorithm",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "documentation": "Compression type, a coded value from the openEHR Integrity check code set. Void means no compression. "
                },
                "integrity_check": {
                    "name": "integrity_check",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "Byte"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Binary cryptographic integrity checksum."
                },
                "integrity_check_algorithm": {
                    "name": "integrity_check_algorithm",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "documentation": "Type of integrity check, a coded value from the openEHR `Integrity check` code set. "
                },
                "thumbnail": {
                    "name": "thumbnail",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_MULTIMEDIA",
                    "documentation": "The thumbnail for this item, if one exists; mainly for graphics formats."
                },
                "size": {
                    "name": "size",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "Original size in bytes of unencoded encapsulated data. I.e. encodings such as base64, hexadecimal etc do not change the value of this attribute."
                }
            }
        },
        "DV_PARSABLE": {
            "name": "DV_PARSABLE",
            "ancestors": [
                "DV_ENCAPSULATED"
            ],
            "documentation": "Encapsulated data expressed as a parsable String. The internal model of the data item is not described in the openEHR model in common with other encapsulated types, but in this case, the form of the data is assumed to be plaintext, rather than compressed or other types of large binary data. ",
            "properties": {
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "The string, which may validly be empty in some syntaxes."
                },
                "formalism": {
                    "name": "formalism",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Name of the formalism, e.g.  GLIF 1.0 ,  Proforma  etc."
                }
            }
        },
        "DV_PARAGRAPH": {
            "name": "DV_PARAGRAPH",
            "ancestors": [
                "DATA_VALUE"
            ],
            "documentation": "DEPRECATED: use markdown formatted `DV_TEXT` instead.\n\nOriginal definition:\n\nA logical composite text value consisting of a series of `DV_TEXTs`, i.e. plain text (optionally coded) potentially with simple formatting, to form a larger tract of prose, which may be interpreted for display purposes as a paragraph. \n\n`DV_PARAGRAPH` is the standard way for constructing longer text items in summaries, reports and so on. ",
            "properties": {
                "items": {
                    "name": "items",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "DV_TEXT"
                    },
                    "cardinality": "|>=1|",
                    "is_mandatory": true,
                    "documentation": "Items making up the paragraph, each of which is a text item (which may have its own formatting, and\/or have hyperlinks). "
                }
            }
        },
        "DV_TEXT": {
            "name": "DV_TEXT",
            "ancestors": [
                "DATA_VALUE"
            ],
            "documentation": "A text item, which may contain any amount of legal characters arranged as e.g. words, sentences etc (i.e. one `DV_TEXT` may be more than one word). Visual formatting and hyperlinks may be included via markdown.\n\nIf the `_formatting_` field is set, the `_value_` field is affected as follows:\n\n* `_formatting_ = \"plain\"`: plain text, may contain newlines;\n* `_formatting_ = \"plain_no_newlines\"`: plain text with no newlines;\n* `_formatting_ = \"markdown\"`: text in markdown format; use of CommonMark strongly recommended.\n\nA `DV_TEXT` can be coded by adding mappings to it.",
            "properties": {
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Displayable rendition of the item, regardless of its underlying structure. For `DV_CODED_TEXT`, this is the rubric of the complete term as provided by the terminology service.\n"
                },
                "hyperlink": {
                    "name": "hyperlink",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_URI",
                    "documentation": "DEPRECATED: this field is deprecated; use markdown link\/text in the `_value_` attribute, and `\"markdown\"` as the value of the `_formatting_` field.\n\nOriginal usage, prior to RM Release 1.0.4: Optional link sitting behind a section of plain text or coded term item."
                },
                "formatting": {
                    "name": "formatting",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "If set, contains one of the following values:\n\n* `\"plain\"`: use for plain text, possibly containing newlines, but otherwise unformatted (same as Void);\n* `\"plain_no_newlines\"`: use for text containing no newlines or other formatting;\n* `\"markdown\"`: use for markdown formatted text, strongly recommended in the format of the CommonMark specification.\n\nDEPRECATED usage: contains a string of the form `\"name:value; name:value...\"` , e.g. `\"font-weight : bold; font-family : Arial; font-size : 12pt;\"`. Values taken from W3C CSS2 properties lists for background and font . "
                },
                "mappings": {
                    "name": "mappings",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "TERM_MAPPING"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Terms from other terminologies most closely matching this term, typically used where the originator (e.g. pathology lab) of information uses a local terminology but also supplies one or more equivalents from well known terminologies (e.g. LOINC). \n"
                },
                "language": {
                    "name": "language",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "documentation": "Optional indicator of the localised language in which the value is written. Coded from openEHR Code Set  languages . Only used when either the text object is in a different language from the enclosing `ENTRY`, or else the text object is being used outside of an `ENTRY` or other enclosing structure which indicates the language. "
                },
                "encoding": {
                    "name": "encoding",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "documentation": "Name of character encoding scheme in which this value is encoded. Coded from openEHR Code Set  character sets . Unicode is the default assumption in openEHR, with UTF-8 being the assumed encoding. This attribute allows for variations from these assumptions. \n"
                }
            }
        },
        "DV_CODED_TEXT": {
            "name": "DV_CODED_TEXT",
            "ancestors": [
                "DV_TEXT"
            ],
            "documentation": "A text item whose value must be the rubric from a controlled terminology, the key (i.e. the 'code') of which is the `_defining_code_` attribute. In other words: a `DV_CODED_TEXT` is a combination of a `CODE_PHRASE` (effectively a code) and the rubric of that term, from a terminology service, in the language in which the data were authored. \n\nSince `DV_CODED_TEXT` is a subtype of `DV_TEXT`, it can be used in place of it, effectively allowing the type `DV_TEXT` to mean  a text item, which may optionally be coded. \n\nMisuse: If the intention is to represent a term code attached in some way to a fragment of plain text, `DV_CODED_TEXT` should not be used; instead use a `DV_TEXT` and a `TERM_MAPPING` to a `CODE_PHRASE`. ",
            "properties": {
                "defining_code": {
                    "name": "defining_code",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "is_mandatory": true,
                    "documentation": "The term of which the  `_value_` attribute is the textual rendition (i.e. rubric). \n"
                }
            }
        },
        "TERM_MAPPING": {
            "name": "TERM_MAPPING",
            "documentation": "Represents a coded term mapped to a `DV_TEXT`, and the relative match of the target term with respect to the mapped item. Plain or coded text items may appear in the EHR for which one or mappings in alternative terminologies are required. Mappings are only used to enable computer processing, so they can only be instances of `DV_CODED_TEXT`.\n\nUsed for adding classification terms (e.g. adding ICD classifiers to SNOMED descriptive terms), or mapping into equivalents in other terminologies (e.g. across nursing vocabularies). \n",
            "properties": {
                "match": {
                    "name": "match",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Character",
                    "is_mandatory": true,
                    "documentation": "The relative match of the target term with respect to the mapped text item. Result meanings: \n\n* `'>'`: the mapping is to a broader term e.g. orginal text =  arbovirus infection , target =  viral infection  \n* `'='`: the mapping is to a (supposedly) equivalent to the original item \n* `'<'`: the mapping is to a narrower term. e.g. original text =  diabetes , mapping =  diabetes mellitus . \n* `'?'`: the kind of mapping is unknown. \n\nThe first three values are taken from the ISO standards 2788 ( Guide to Establishment and development of monolingual thesauri) and 5964 (Guide to Establishment and development of multilingual thesauri). \n"
                },
                "purpose": {
                    "name": "purpose",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "documentation": "Purpose of the mapping e.g. 'automated data mining', 'billing', 'interoperability'."
                },
                "target": {
                    "name": "target",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "is_mandatory": true,
                    "documentation": "The target term of the mapping. "
                }
            }
        },
        "CODE_PHRASE": {
            "name": "CODE_PHRASE",
            "documentation": "A fully coordinated (i.e. all coordination has been performed) term from a terminology service (as distinct from a particular terminology). ",
            "properties": {
                "terminology_id": {
                    "name": "terminology_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "TERMINOLOGY_ID",
                    "is_mandatory": true,
                    "documentation": "Identifier of the distinct terminology from which the code_string (or its elements) was extracted."
                },
                "code_string": {
                    "name": "code_string",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "The key used by the terminology service to identify a concept or coordination of concepts. This string is most likely parsable inside the terminology service, but nothing can be assumed about its syntax outside that context. "
                },
                "preferred_term": {
                    "name": "preferred_term",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Optional attribute to carry preferred term corresponding to the code or expression in `_code_string_`. Typical use in integration situations which create mappings, and representing data for which both a (non-preferred) actual term and a preferred term are both required."
                }
            }
        },
        "DV_ORDERED": {
            "name": "DV_ORDERED",
            "is_abstract": true,
            "ancestors": [
                "DATA_VALUE",
                "Ordered"
            ],
            "documentation": "Abstract class defining the concept of ordered values, which includes ordinals as well as true quantities. It defines the functions  `<` and `_is_strictly_comparable_to()_`, the latter of which must evaluate to `True` for instances being compared with the  `<` function, or used as limits in the `DV_INTERVAL<T>` class. \n\nData value types which are to be used as limits in the `DV_INTERVAL<T>` class must inherit from this class, and implement the function `_is_strictly_comparable_to()_` to ensure that instances compare meaningfully. For example, instances of `DV_QUANTITY` can only be compared if they measure the same kind of physical quantity. \n",
            "properties": {
                "normal_status": {
                    "name": "normal_status",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "documentation": "Optional normal status indicator of value with respect to normal range for this value. Often included by lab, even if the normal range itself is not included. Coded by ordinals in series HHH, HH, H, (nothing), L, LL, LLL; see openEHR terminology group  `normal_status`. "
                },
                "normal_range": {
                    "name": "normal_range",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_INTERVAL",
                    "documentation": "Optional normal range. "
                },
                "other_reference_ranges": {
                    "name": "other_reference_ranges",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "REFERENCE_RANGE"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Optional tagged other reference ranges for this value in its particular measurement context."
                }
            }
        },
        "DV_INTERVAL": {
            "name": "DV_INTERVAL",
            "ancestors": [
                "DATA_VALUE",
                "Interval"
            ],
            "documentation": "Generic class defining an interval (i.e. range) of a comparable type. An interval is a contiguous subrange of a comparable base type. Used to define intervals of dates, times, quantities (whose units match) and so on. The type parameter, `T`, must be a descendant of the type `DV_ORDERED`, which is necessary (but not sufficient) for instances to be compared (`_strictly_comparable_` is also needed). \n\nWithout the `DV_INTERVAL` class, quite a few more `DV_` classes would be needed to express logical intervals, namely interval versions of all the date\/time classes, and of quantity classes. Further, it allows the semantics of intervals to be stated in one place unequivocally, including the conditions for strict comparison. \n\nThe basic semantics are derived from the class `Interval<T>`, described in the support RM. ",
            "generic_parameter_defs": {
                "T": {
                    "name": "T",
                    "conforms_to_type": "DV_ORDERED"
                }
            }
        },
        "REFERENCE_RANGE": {
            "name": "REFERENCE_RANGE",
            "documentation": "Defines a named range to be associated with any `DV_ORDERED` datum. Each such range is particular to the patient and context, e.g. sex, age, and any other factor which affects ranges. May be used to represent normal, therapeutic, dangerous, critical etc ranges.",
            "generic_parameter_defs": {
                "T": {
                    "name": "T",
                    "conforms_to_type": "DV_ORDERED"
                }
            },
            "properties": {
                "meaning": {
                    "name": "meaning",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_TEXT",
                    "is_mandatory": true,
                    "documentation": "Term whose value indicates the meaning of this range, e.g.  normal,  critical,  therapeutic  etc."
                },
                "range": {
                    "name": "range",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_INTERVAL",
                    "is_mandatory": true,
                    "documentation": "The data range for this meaning, e.g. critical  etc."
                }
            }
        },
        "DV_QUANTIFIED": {
            "name": "DV_QUANTIFIED",
            "is_abstract": true,
            "ancestors": [
                "DV_ORDERED"
            ],
            "documentation": "Abstract class defining the concept of true quantified values, i.e. values which are not only ordered, but which have a precise magnitude.",
            "properties": {
                "magnitude_status": {
                    "name": "magnitude_status",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Optional status of magnitude with values: \n\n* `\"=\"`   :   magnitude is a point value \n* `\"<\"`   :   value is < magnitude \n* `\">\"`   :   value is > magnitude \n* `\"<=\"` : value is <= magnitude \n* `\">=\"` : value is >= magnitude \n* `\"~\"`   :   value is approximately magnitude \n\nIf not present, assumed meaning is  `\"=\"` . \n"
                },
                "accuracy": {
                    "name": "accuracy",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Any",
                    "documentation": "Accuracy of measurement. Exact form of expression determined in descendants."
                }
            }
        },
        "DV_PROPORTION": {
            "name": "DV_PROPORTION",
            "ancestors": [
                "PROPORTION_KIND",
                "DV_AMOUNT"
            ],
            "documentation": "Models a ratio of values, i.e. where the numerator and denominator are both pure numbers. The `_valid_proportion_kind_` property of the `PROPORTION_KIND` class is used to control the type attribute to be one of a defined set.\n\nUsed for recording titers (e.g. 1:128), concentration ratios, e.g. Na:K (unitary denominator), albumin:creatinine ratio, and percentages, e.g. red cell distirbution width (RDW). \n \nMisuse: Should not be used to represent things like blood pressure which are often written using a  '\/' character, giving the misleading impression that the item is a ratio, when in fact it is a structured value. Similarly, visual acuity, often written as (e.g.) \"6\/24\" in clinical notes is not a ratio but an ordinal (which includes non-numeric symbols like CF = count fingers etc). Should not be used for formulations. ",
            "properties": {
                "numerator": {
                    "name": "numerator",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Real",
                    "is_mandatory": true,
                    "documentation": "Numerator of ratio"
                },
                "denominator": {
                    "name": "denominator",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Real",
                    "is_mandatory": true,
                    "documentation": "Denominator of ratio."
                },
                "type": {
                    "name": "type",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "Indicates semantic type of proportion, including percent, unitary etc."
                },
                "precision": {
                    "name": "precision",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "documentation": "Precision  to  which  the  `_numerator_` and `_denominator_` values of  the  proportion are expressed, in terms of number  of decimal places. The value 0 implies an integral quantity. The value -1 implies no limit, i.e. any number of decimal places. "
                },
                "normal_range": {
                    "name": "normal_range",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "DV_INTERVAL",
                        "generic_parameters": [
                            "DV_PROPORTION"
                        ]
                    },
                    "documentation": "Optional normal range. "
                },
                "other_reference_ranges": {
                    "name": "other_reference_ranges",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "REFERENCE_RANGE",
                        "generic_parameters": [
                            "DV_PROPORTION"
                        ]
                    },
                    "documentation": "Optional tagged other reference ranges for this value in its particular measurement context."
                }
            }
        },
        "PROPORTION_KIND": {
            "name": "PROPORTION_KIND",
            "documentation": "Class of enumeration constants defining types of proportion for the `DV_PROPORTION` class. ",
            "properties": {
                "pk_ratio": {
                    "name": "pk_ratio",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "Ratio type. Numerator and denominator may be any value.\n"
                },
                "pk_unitary": {
                    "name": "pk_unitary",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "Denominator must be 1."
                },
                "pk_percent": {
                    "name": "pk_percent",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "Denominator is 100, numerator is understood as a percentage value."
                },
                "pk_fraction": {
                    "name": "pk_fraction",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "Numerator and denominator are integral, and the presentation method uses a slash, e.g.  1\/2 . \n"
                },
                "pk_integer_fraction": {
                    "name": "pk_integer_fraction",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "Numerator and denominator are integral, and the presentation method uses a slash, e.g.  1\/2 ; if the numerator is greater than the denominator, e.g. n=3, d=2, the presentation is  1 1\/2 ."
                }
            }
        },
        "DV_AMOUNT": {
            "name": "DV_AMOUNT",
            "is_abstract": true,
            "ancestors": [
                "DV_QUANTIFIED"
            ],
            "documentation": "Abstract class defining the concept of relative quantified  'amounts'. For relative quantities, the  `+` and  `-` operators are defined (unlike descendants of `DV_ABSOLUTE_QUANTITY`, such as the date\/time types). \n",
            "properties": {
                "accuracy_is_percent": {
                    "name": "accuracy_is_percent",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "documentation": "If `True`, indicates that when this object was created, `_accuracy_` was recorded as a percent value; if `False`, as an absolute quantity value."
                },
                "accuracy": {
                    "name": "accuracy",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Real",
                    "documentation": "Accuracy of measurement, expressed either as a half-range percent value (`_accuracy_is_percent_` = `True`) or a half-range quantity. A value of `0` means that accuracy is 100%, i.e. no error.\n\nA value of `_unknown_accuracy_value_` means that accuracy was not recorded."
                }
            }
        },
        "DV_QUANTITY": {
            "name": "DV_QUANTITY",
            "ancestors": [
                "DV_AMOUNT"
            ],
            "documentation": "Quantitified type representing  scientific  quantities, i.e. quantities expressed as a magnitude and units. Units are expressed in the UCUM syntax (http:\/\/unitsofmeasure.org\/ucum.html[Unified Code for Units of Measure (UCUM)], by Gunther Schadow and Clement J. McDonald of The Regenstrief Institute)  (case-sensitive form) by default, or another system if `_units_system_` is set. \n\nCan also be used for time durations, where it is more convenient to treat these as simply a number of seconds rather than days, months, years (in the latter case, `DV_DURATION` may be used).",
            "properties": {
                "magnitude": {
                    "name": "magnitude",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Real",
                    "is_mandatory": true,
                    "documentation": "Numeric magnitude of the quantity."
                },
                "precision": {
                    "name": "precision",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "documentation": "Precision to which the value of the quantity is expressed, in terms of number of decimal places. The value 0 implies an integral quantity.\nThe value -1 implies no limit, i.e. any number of decimal places."
                },
                "units": {
                    "name": "units",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Quantity units, expressed as a code or syntax string from either UCUM (the default) or the units system specified in `_units_system_`, when set.\n\nIn either case, the value is the code or syntax - normally formed of standard ASCII - which is in principal not the same as the display string, although in simple cases such as 'm' (for meters) it will be.\n\nIf the `_units_display_name_` field is set, this may be used for display. If not, the implementations must effect the resolution of the `_units_` value to a display form locally, e.g. by lookup of reference tables, request to a terminology service etc.\n\nExample values from UCUM: \"kg\/m^2\", \u201cmm[Hg]\", \"ms-1\", \"km\/h\"."
                },
                "normal_range": {
                    "name": "normal_range",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "DV_INTERVAL",
                        "generic_parameters": [
                            "DV_QUANTITY"
                        ]
                    },
                    "documentation": "Optional normal range. "
                },
                "other_reference_ranges": {
                    "name": "other_reference_ranges",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "REFERENCE_RANGE",
                        "generic_parameters": [
                            "DV_QUANTITY"
                        ]
                    },
                    "documentation": "Optional tagged other reference ranges for this value in its particular measurement context."
                },
                "units_system": {
                    "name": "units_system",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Optional field used to specify a units system from which codes in `_units_` are defined. Value is a URI identifying a terminology containing units concepts from the  (https:\/\/www.hl7.org\/fhir\/terminologies-systems.html[HL7 FHIR terminologies list]).\n\nIf not set, the UCUM standard (case-sensitive codes) is assumed as the units system."
                },
                "units_display_name": {
                    "name": "units_display_name",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Optional field containing the displayable form of the `_units_` field, e.g. `'\u00b0C'`.\n\nIf not set, the application environment needs to determine the displayable form.\n\nNOTE: The display name may be language-dependent for various older and non-systematic units. For this reason, it is not recommended to add unit display names to archetypes, only to templates (for localisation purposes)."
                }
            }
        },
        "DV_COUNT": {
            "name": "DV_COUNT",
            "ancestors": [
                "DV_AMOUNT"
            ],
            "documentation": "Countable quantities. Used for countable types such as pregnancies and steps (taken by a physiotherapy patient), number of cigarettes smoked in a day. \n\nMisuse: Not to be used for amounts of physical entities (which all have units).",
            "properties": {
                "magnitude": {
                    "name": "magnitude",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer64",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "normal_range": {
                    "name": "normal_range",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "DV_INTERVAL",
                        "generic_parameters": [
                            "DV_COUNT"
                        ]
                    },
                    "documentation": "Optional normal range. "
                },
                "other_reference_ranges": {
                    "name": "other_reference_ranges",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "REFERENCE_RANGE",
                        "generic_parameters": [
                            "DV_COUNT"
                        ]
                    },
                    "documentation": "Optional tagged other reference ranges for this value in its particular measurement context."
                }
            }
        },
        "DV_ABSOLUTE_QUANTITY": {
            "name": "DV_ABSOLUTE_QUANTITY",
            "is_abstract": true,
            "ancestors": [
                "DV_QUANTIFIED"
            ],
            "documentation": "Abstract class defining the concept of quantified entities whose values are absolute with respect to an origin. Dates and Times are the main example.",
            "properties": {
                "accuracy": {
                    "name": "accuracy",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_AMOUNT",
                    "documentation": ""
                }
            }
        },
        "DV_ORDINAL": {
            "name": "DV_ORDINAL",
            "ancestors": [
                "DV_ORDERED"
            ],
            "documentation": "A data type that represents integral score values, e.g. pain, Apgar values, etc, where there is:\n\na) implied ordering, \nb) no implication that the distance between each value is constant, and \nc) the total number of values is finite;\nd) integer values only.\n\nNote that although the term 'ordinal' in mathematics means natural numbers only, here any integer is allowed, since negative and zero values are often used by medical professionals for values around a neutral point. Examples of sets of ordinal values: \n\n*   -3, -2, -1, 0, 1, 2, 3  -- reflex response values \n*    0, 1, 2                  -- Apgar values \n\nThis class is used for recording any clinical datum which is customarily recorded using symbolic values. Example: the results on a urinalysis strip, e.g. `{neg, trace, +, ++, +++}` are used for leucocytes, protein, nitrites etc; for non-haemolysed blood `{neg, trace, moderate}`; for haemolysed blood `{small, moderate, large}`.\n\nFor scores or scales that include Real numbers (or might in the future, i.e. not fixed for all time, such as Apgar), use `DV_SCALE`. `DV_SCALE` may also be used in future for representing purely Integer-based scales, however, the `DV_ORDINAL` type should continue to be supported in software implementations in order to accommodate existing data that are instances of this type.",
            "properties": {
                "symbol": {
                    "name": "symbol",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "is_mandatory": true,
                    "documentation": "Coded textual representation of this value in the enumeration, which may be strings made from  +  symbols, or other enumerations of terms such as  `mild`, `moderate`, `severe`, or even the same number series as the values, e.g. 1, 2, 3."
                },
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "Value in ordered enumeration of values. Any integer value can be used. \n"
                }
            }
        },
        "DV_SCALE": {
            "name": "DV_SCALE",
            "ancestors": [
                "DV_ORDERED"
            ],
            "documentation": "A data type that represents scale values, where there is:\n\na) implied ordering, \nb) no implication that the distance between each value is constant, and \nc) the total number of values is finite;\nd) non-integer values are allowed.\n\nExample:\n\n----\nBorg CR 10 Scale\n\n0    No Breathlessness at all\n0.5  Very Very Slight (Just Noticeable)\n1    Very Slight\n2    Slight Breathlessness\n3    Moderate\n... etc\n----\n\nFor scores that include only Integers, `DV_SCALE` may also be used, but `DV_ORDINAL` should be supported to accommodate existing data instances of that type.",
            "properties": {
                "symbol": {
                    "name": "symbol",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "is_mandatory": true,
                    "documentation": "Coded textual representation of this value in the scale range, which may be strings made from symbols or other enumerations of terms such as  `no breathlessness`, `very very slight`, `slight breathlessness`. Codes come from archetypes.\n\nIn some cases, a scale may include values that have no code\/symbol. In this case, the symbol will be a `DV-CODED_TEXT` including the `_terminology_id_` and a blank String value for `_code_string_`."
                },
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Real",
                    "is_mandatory": true,
                    "documentation": "Real number value of Scale item.\n"
                }
            }
        },
        "DV_DURATION": {
            "name": "DV_DURATION",
            "ancestors": [
                "DV_AMOUNT",
                "Iso8601_duration"
            ],
            "documentation": "Represents a period of time with respect to a notional point in time, which is not specified. A sign may be used to indicate the duration is  backwards  in time rather than forwards. \n\nNOTE: two deviations from ISO 8601 are supported, the first, to allow a negative sign, and the second allowing the 'W' designator to be mixed with other designators. See time types section in the Foundation Types model. \n\nUsed for recording the duration of something in the real world, particularly when there is a need a) to represent the duration in customary format, i.e. days, hours, minutes etc, and b) if it will be used in computational operations with date\/time quantities, i.e. additions, subtractions etc. \n\nMisuse: Durations cannot be used to represent points in time, or intervals of time. ",
            "properties": {
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "ISO8601 duration string, including described deviations to support negative values and weeks."
                }
            }
        },
        "DV_TEMPORAL": {
            "name": "DV_TEMPORAL",
            "is_abstract": true,
            "ancestors": [
                "DV_ABSOLUTE_QUANTITY"
            ],
            "documentation": "Specialised temporal variant of `DV_ABSOLUTE_QUANTITY` whose diff type is `DV_DURATION`. ",
            "properties": {
                "accuracy": {
                    "name": "accuracy",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DURATION",
                    "documentation": "Time accuracy, expressed as a duration."
                }
            }
        },
        "DV_DATE": {
            "name": "DV_DATE",
            "ancestors": [
                "DV_TEMPORAL",
                "Iso8601_date"
            ],
            "documentation": "Represents an absolute point in time, as measured on the Gregorian calendar, and specified only to the day. Semantics defined by ISO 8601. Used for recording dates in real world time. The partial form is used for approximate birth dates, dates of death, etc.\n",
            "properties": {
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "ISO8601 date string."
                }
            }
        },
        "DV_TIME": {
            "name": "DV_TIME",
            "ancestors": [
                "DV_TEMPORAL",
                "Iso8601_time"
            ],
            "documentation": "Represents an absolute point in time from an origin usually interpreted as meaning the start of the current day, specified to a fraction of a second. Semantics defined by ISO 8601. \n\nUsed for recording real world times, rather than scientifically measured fine amounts of time. The partial form is used for approximate times of events and substance administrations. ",
            "properties": {
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "ISO8601 time string"
                }
            }
        },
        "DV_DATE_TIME": {
            "name": "DV_DATE_TIME",
            "ancestors": [
                "DV_TEMPORAL",
                "Iso8601_date_time"
            ],
            "documentation": "Represents an absolute point in time, specified to the second. Semantics defined by ISO 8601. \n\nUsed for recording a precise point in real world time, and for approximate time stamps, e.g. the origin of a `HISTORY` in an `OBSERVATION` which is only partially known. \n",
            "properties": {
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "ISO8601 date\/time string."
                }
            }
        },
        "DV_TIME_SPECIFICATION": {
            "name": "DV_TIME_SPECIFICATION",
            "is_abstract": true,
            "ancestors": [
                "DATA_VALUE"
            ],
            "documentation": "This is an abstract class of which all timing specifications are specialisations. Specifies points in time, possibly linked to the calendar, or a real world repeating event, such as  breakfast. ",
            "properties": {
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_PARSABLE",
                    "is_mandatory": true,
                    "documentation": "The specification, in the HL7v3 syntax for `PIVL` or `EIVL` types."
                }
            }
        },
        "DV_PERIODIC_TIME_SPECIFICATION": {
            "name": "DV_PERIODIC_TIME_SPECIFICATION",
            "ancestors": [
                "DV_TIME_SPECIFICATION"
            ],
            "documentation": "Specifies periodic points in time, linked to the calendar (phase-linked), or a real world repeating event, such as  breakfast  (event-linked). Based on the HL7v3 data types `PIVL<T>` and `EIVL<T>`. \n\nUsed in therapeutic prescriptions, expressed as `INSTRUCTIONs` in the openEHR model. "
        },
        "DV_GENERAL_TIME_SPECIFICATION": {
            "name": "DV_GENERAL_TIME_SPECIFICATION",
            "ancestors": [
                "DV_TIME_SPECIFICATION"
            ],
            "documentation": "Specifies points in time in a general syntax. Based on the HL7v3 GTS data type."
        },
        "DV_URI": {
            "name": "DV_URI",
            "ancestors": [
                "DATA_VALUE"
            ],
            "documentation": "A reference to an object which structurally conforms to the Universal Resource Identifier (URI) RFC-3986 standard. The reference is contained in the `_value_` attribute, which is a `String`. So-called 'plain-text URIs' that contain RFC-3986 forbidden characters such as spaces etc, are allowed on the basis that they need to be RFC-3986 encoded prior to use in e.g. REST APIs or other contexts relying on machine-level conformance.",
            "properties": {
                "value": {
                    "name": "value",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Value of URI as a String. 'Plain-text' URIs are allowed, enabling better readability, but must be RFC-3986 encoded in use."
                }
            }
        },
        "DV_EHR_URI": {
            "name": "DV_EHR_URI",
            "ancestors": [
                "DV_URI"
            ],
            "documentation": "A `DV_EHR_URI` is a `DV_URI` which has the scheme name 'ehr', and which can only reference items in EHRs. \n\nUsed to reference items in an EHR, which may be the same as the current EHR (containing this link), or another."
        },
        "EXTERNAL_ENVIRONMENT_ACCESS": {
            "name": "EXTERNAL_ENVIRONMENT_ACCESS",
            "is_abstract": true,
            "ancestors": [
                "TERMINOLOGY_SERVICE",
                "MEASUREMENT_SERVICE"
            ],
            "documentation": "A mixin class providing access to services in the external environment."
        },
        "MEASUREMENT_SERVICE": {
            "name": "MEASUREMENT_SERVICE",
            "documentation": "Defines an object providing proxy access to a measurement information service."
        },
        "OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS": {
            "name": "OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS",
            "documentation": "List of identifiers for groups in the openEHR terminology. ",
            "properties": {
                "Terminology_id_openehr": {
                    "name": "Terminology_id_openehr",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Name of openEHR's own terminology."
                },
                "Group_id_audit_change_type": {
                    "name": "Group_id_audit_change_type",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_attestation_reason": {
                    "name": "Group_id_attestation_reason",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_composition_category": {
                    "name": "Group_id_composition_category",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_event_math_function": {
                    "name": "Group_id_event_math_function",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_instruction_states": {
                    "name": "Group_id_instruction_states",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_instruction_transitions": {
                    "name": "Group_id_instruction_transitions",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_null_flavours": {
                    "name": "Group_id_null_flavours",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_property": {
                    "name": "Group_id_property",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_participation_function": {
                    "name": "Group_id_participation_function",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_participation_mode": {
                    "name": "Group_id_participation_mode",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_setting": {
                    "name": "Group_id_setting",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_term_mapping_purpose": {
                    "name": "Group_id_term_mapping_purpose",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_subject_relationship": {
                    "name": "Group_id_subject_relationship",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Group_id_version_life_cycle_state": {
                    "name": "Group_id_version_life_cycle_state",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                }
            }
        },
        "OPENEHR_CODE_SET_IDENTIFIERS": {
            "name": "OPENEHR_CODE_SET_IDENTIFIERS",
            "documentation": "List of identifiers for code sets in the openEHR terminology. ",
            "properties": {
                "Code_set_id_character_sets": {
                    "name": "Code_set_id_character_sets",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Code_set_id_compression_algorithms": {
                    "name": "Code_set_id_compression_algorithms",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Code_set_id_countries": {
                    "name": "Code_set_id_countries",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Code_set_integrity_check_algorithms": {
                    "name": "Code_set_integrity_check_algorithms",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Code_set_id_languages": {
                    "name": "Code_set_id_languages",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Code_set_id_media_types": {
                    "name": "Code_set_id_media_types",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "Code_set_id_normal_statuses": {
                    "name": "Code_set_id_normal_statuses",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": ""
                }
            }
        },
        "TERMINOLOGY_SERVICE": {
            "name": "TERMINOLOGY_SERVICE",
            "ancestors": [
                "OPENEHR_TERMINOLOGY_GROUP_IDENTIFIERS",
                "OPENEHR_CODE_SET_IDENTIFIERS"
            ],
            "documentation": "Defines an object providing proxy access to a terminology service. "
        },
        "CODE_SET_ACCESS": {
            "name": "CODE_SET_ACCESS",
            "documentation": "Defines an object providing proxy access to a code_set."
        },
        "TERMINOLOGY_ACCESS": {
            "name": "TERMINOLOGY_ACCESS",
            "documentation": "Defines an object providing proxy access to a terminology. "
        },
        "ACCESS_CONTROL_SETTINGS": {
            "name": "ACCESS_CONTROL_SETTINGS",
            "is_abstract": true,
            "documentation": "Access Control Settings for the EHR and components. Intended to support multiple access control schemes. Currently implementation dependent."
        },
        "EHR": {
            "name": "EHR",
            "documentation": "The EHR object is the root object and access point of an EHR for a subject of care. ",
            "properties": {
                "system_id": {
                    "name": "system_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "HIER_OBJECT_ID",
                    "is_mandatory": true,
                    "documentation": "The identifier of the logical EHR management system in which this EHR was created. \n"
                },
                "ehr_id": {
                    "name": "ehr_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "HIER_OBJECT_ID",
                    "is_mandatory": true,
                    "documentation": "The unique identifier of this EHR.\n\nNOTE: is is strongly recommended that a UUID always be used for this field."
                },
                "contributions": {
                    "name": "contributions",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "OBJECT_REF"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "List of contributions causing changes to this EHR. Each contribution contains a list of versions, which may include references to any number of `VERSION` instances, i.e. items of type `VERSIONED_COMPOSITION` and `VERSIONED_FOLDER`. "
                },
                "ehr_status": {
                    "name": "ehr_status",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_REF",
                    "is_mandatory": true,
                    "documentation": "Reference to `EHR_STATUS` object for this EHR."
                },
                "ehr_access": {
                    "name": "ehr_access",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_REF",
                    "is_mandatory": true,
                    "documentation": "Reference to `EHR_ACCESS` object for this EHR."
                },
                "compositions": {
                    "name": "compositions",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "OBJECT_REF"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Master list of all Versioned Composition references in this EHR."
                },
                "directory": {
                    "name": "directory",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_REF",
                    "documentation": "Optional directory structure for this EHR. If present, this is a reference to the first member of `_folders_`."
                },
                "time_created": {
                    "name": "time_created",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "is_mandatory": true,
                    "documentation": "Time of creation of the EHR."
                },
                "folders": {
                    "name": "folders",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "OBJECT_REF"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Optional additional Folder structures for this EHR. If set, the `_directory_` attribute refers to the first member."
                }
            }
        },
        "VERSIONED_EHR_ACCESS": {
            "name": "VERSIONED_EHR_ACCESS",
            "ancestors": [
                "VERSIONED_OBJECT"
            ],
            "documentation": "Version container for EHR_ACCESS instance."
        },
        "VERSIONED_EHR_STATUS": {
            "name": "VERSIONED_EHR_STATUS",
            "ancestors": [
                "VERSIONED_OBJECT"
            ],
            "documentation": "Version container for EHR_STATUS instance."
        },
        "VERSIONED_COMPOSITION": {
            "name": "VERSIONED_COMPOSITION",
            "ancestors": [
                "VERSIONED_OBJECT"
            ],
            "documentation": "Version-controlled composition abstraction, defined by inheriting `VERSIONED_OBJECT<COMPOSITION>`. "
        },
        "EHR_ACCESS": {
            "name": "EHR_ACCESS",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "EHR-wide access control object. All access decisions to data in the EHR must be made in accordance with the policies and rules in this object.\n\nNOTE: It is strongly recommended that the inherited attribute `_uid_` be populated in `EHR_ACCESS` objects, using the UID copied from the `_object_id()_` of the `_uid_` field of the enclosing `VERSION` object. +\nFor example, the `ORIGINAL_VERSION.uid` `87284370-2D4B-4e3d-A3F3-F303D2F4F34B::uk.nhs.ehr1::2` would be copied to the `_uid_` field of the `EHR_ACCESS` object.",
            "properties": {
                "settings": {
                    "name": "settings",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ACCESS_CONTROL_SETTINGS",
                    "documentation": "Access control settings for the EHR. Instance is a subtype of the type `ACCESS_CONTROL_SETTINGS`, allowing for the use of different access control schemes. "
                }
            }
        },
        "EHR_STATUS": {
            "name": "EHR_STATUS",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Single object per EHR containing various EHR-wide status flags and settings, including whether this EHR can be queried, modified etc. This object is always modifiable, in order to change the status of the EHR as a whole.\n\nNOTE: It is strongly recommended that the inherited attribute `_uid_` be populated in `EHR_STATUS` objects, using the UID copied from the `_object_id()_` of the `_uid_` field of the enclosing `VERSION` object. +\nFor example, the `ORIGINAL_VERSION.uid` `87284370-2D4B-4e3d-A3F3-F303D2F4F34B::uk.nhs.ehr1::2`  would be copied to the `_uid_` field of the `EHR_STATUS` object.",
            "properties": {
                "subject": {
                    "name": "subject",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_SELF",
                    "is_mandatory": true,
                    "documentation": "The subject of this EHR. The `_external_ref_` attribute can be used to contain a direct reference to the subject in a demographic or identity service. Alternatively, the association between patients and their records may be done elsewhere for security reasons. "
                },
                "is_queryable": {
                    "name": "is_queryable",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "is_mandatory": true,
                    "documentation": "True if this EHR should be included in population queries, i.e. if this EHR is considered active in the population."
                },
                "is_modifiable": {
                    "name": "is_modifiable",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "is_mandatory": true,
                    "documentation": "True if the EHR, other than the `EHR_STATUS` object, is allowed to be written to. The `EHR_STATUS` object itself can always be written to."
                },
                "other_details": {
                    "name": "other_details",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "documentation": "Any other details of the EHR summary object, in the form of an archetyped `ITEM_STRUCTURE`."
                }
            }
        },
        "EXTRACT": {
            "name": "EXTRACT",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Generic model of an Extract of some information from a repository.",
            "properties": {
                "chapters": {
                    "name": "chapters",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "EXTRACT_CHAPTER"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "The content extracted and serialised from the source repository for this Extract."
                },
                "specification": {
                    "name": "specification",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "EXTRACT_SPEC",
                    "documentation": "The specification that this Extract actually conforms to; might not be identical with the specification of the corresponding request."
                },
                "request_id": {
                    "name": "request_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "HIER_OBJECT_ID",
                    "documentation": "Reference to causing Request, if any."
                },
                "time_created": {
                    "name": "time_created",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "is_mandatory": true,
                    "documentation": "Creation time of this Extract"
                },
                "system_id": {
                    "name": "system_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "HIER_OBJECT_ID",
                    "is_mandatory": true,
                    "documentation": "Identifier of creating system."
                },
                "sequence_nr": {
                    "name": "sequence_nr",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "Number of this Extract response in sequence of responses to Extract request identified by `_request_id_`. If this is the sole response, or there was no request, value is 1."
                },
                "participations": {
                    "name": "participations",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "EXTRACT_PARTICIPATION"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Participations relevant to the creation of this Extract."
                }
            }
        },
        "EXTRACT_ACTION_REQUEST": {
            "name": "EXTRACT_ACTION_REQUEST",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Generic model of a Request for an Extract, containing an Extract specification.",
            "properties": {
                "request_id": {
                    "name": "request_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_REF",
                    "is_mandatory": true,
                    "documentation": "Identifier of previous `EXTRACT_REQUEST`."
                },
                "uid": {
                    "name": "uid",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "HIER_OBJECT_ID",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "action": {
                    "name": "action",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "is_mandatory": true,
                    "documentation": "Requested action: `cancel | resend | send new`. Coded by openEHR Terminology group `'extract action type'`."
                }
            }
        },
        "EXTRACT_CHAPTER": {
            "name": "EXTRACT_CHAPTER",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "One content chapter of an Extract; contains information relating to only one entity.",
            "properties": {
                "items": {
                    "name": "items",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "EXTRACT_ITEM"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "The information content of this chapter."
                }
            }
        },
        "EXTRACT_CONTENT_ITEM": {
            "name": "EXTRACT_CONTENT_ITEM",
            "is_abstract": true,
            "ancestors": [
                "EXTRACT_ITEM"
            ],
            "documentation": "Abstract model of a wrapper for one content item in an Extract, containing various meta-data. Indicates whether it was part of the primary set and what its original path was. Intended to be subtyped for wrappers of specific types of content.",
            "properties": {
                "is_primary": {
                    "name": "is_primary",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "is_mandatory": true,
                    "documentation": "True if the content item carried in this container was part of the primary set for the Extract, i.e. not added due to link-following."
                },
                "is_changed": {
                    "name": "is_changed",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "documentation": "True if the content item carried in this container is any kind of change since last send, in repeat sending situations."
                },
                "is_masked": {
                    "name": "is_masked",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "documentation": "True if the content of this item has not been included due to insufficient access rights of requestor."
                },
                "item": {
                    "name": "item",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Any",
                    "documentation": "Content object."
                }
            }
        },
        "EXTRACT_ENTITY_CHAPTER": {
            "name": "EXTRACT_ENTITY_CHAPTER",
            "ancestors": [
                "EXTRACT_CHAPTER"
            ],
            "documentation": "Type of chapter that contains information relating to a single demographic entity.",
            "properties": {
                "extract_id_key": {
                    "name": "extract_id_key",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Reference to entity, usually a demographic entity such as a patient that the content of this chapter relates to."
                }
            }
        },
        "EXTRACT_ENTITY_MANIFEST": {
            "name": "EXTRACT_ENTITY_MANIFEST",
            "documentation": "The manifest for one entity (e.g. EHR subject), identifying the entity and optionally specifying top-level items to be included in the Extract. The list actually included may be modified by the `_version_spec_` part of the specification, and also by the link_depth attribute. In repeat (standing order) requests, the final inclusion may be modified by the send_changes_only value for `EXTRACT_UPDATE_SPEC._update_method_`.\n\nVarious identifiers may be provided for the entity; these are to be used by the receiver system to locate the entity. The `_extract_id_key_` attribute is used to record the identifier that will be used throughout the Extract for this entity, including in instances of `EXTRACT_ENTITY_IDENTIFIER`.",
            "properties": {
                "extract_id_key": {
                    "name": "extract_id_key",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Identifier by which this entity is known in the Extract. May be one of the other identifiers, e.g. ehr_id or subject_id, or it may be something else, including a simple integer."
                },
                "ehr_id": {
                    "name": "ehr_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "EHR \/ EMR identifier for the entity at the target system."
                },
                "subject_id": {
                    "name": "subject_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Subject (i.e. patient or similar) identifier for the entity at the target system."
                },
                "other_ids": {
                    "name": "other_ids",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "String"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Other identifiers that may be used to find the entity at the target system, keyed by type. May include medicare numbers, drivers license number, tax number etc."
                },
                "item_list": {
                    "name": "item_list",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "OBJECT_REF"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "List of Uids of items to be included in the Extract, in cases where individual items are being requested by id. More typically, this attribute is not used, and the `EXTRACT_SPEC._criteria query_` defines the Extract contents. If set, for openEHR data, these are Uids identifying the version containers."
                }
            }
        },
        "EXTRACT_ERROR": {
            "name": "EXTRACT_ERROR",
            "documentation": "",
            "properties": {
                "request_id": {
                    "name": "request_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_REF",
                    "documentation": ""
                },
                "reason": {
                    "name": "reason",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_TEXT",
                    "is_mandatory": true,
                    "documentation": ""
                }
            }
        },
        "EXTRACT_FOLDER": {
            "name": "EXTRACT_FOLDER",
            "ancestors": [
                "EXTRACT_ITEM"
            ],
            "documentation": "Folder in local Folder structure in an Extract. Empty Folders are allowed.",
            "properties": {
                "items": {
                    "name": "items",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "EXTRACT_ITEM"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "List of Folders and content items in this Folder."
                }
            }
        },
        "EXTRACT_ITEM": {
            "name": "EXTRACT_ITEM",
            "is_abstract": true,
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Abstract parent of Extract Folder and Content types."
        },
        "EXTRACT_MANIFEST": {
            "name": "EXTRACT_MANIFEST",
            "documentation": "Specification of the candidate entities and optionally top-level items (e.g. Compositions) to be included in the Extract.",
            "properties": {
                "entities": {
                    "name": "entities",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "EXTRACT_ENTITY_MANIFEST"
                    },
                    "cardinality": "|>=1|",
                    "is_mandatory": true,
                    "documentation": "List of entity manifests uids of items included in the Extract; for openEHR data, these are uids identifying the version containers."
                }
            }
        },
        "EXTRACT_PARTICIPATION": {
            "name": "EXTRACT_PARTICIPATION",
            "documentation": "Model of a participation of a Party (any Actor or Role) in an activity.  Used to represent any participation of a Party in some activity, which is not  explicitly in the model, e.g. assisting nurse. Can be used to record past or  future participations.\n\nShould not be used in place of more permanent relationships between demographic entities. ",
            "properties": {
                "time": {
                    "name": "time",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "DV_INTERVAL",
                        "generic_parameters": [
                            "DV_DATE_TIME"
                        ]
                    },
                    "documentation": "The time interval during which the participation took place, if it is used in an observational context (i.e. recording facts about the past); or the intended time interval of the participation when used in future contexts, such as EHR Instructions. "
                },
                "function": {
                    "name": "function",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_TEXT",
                    "is_mandatory": true,
                    "documentation": "The function of the Party in this participation (note that a given party might participate in more than one way in a particular activity). This attribute should be coded, but cannot be limited to the HL7v3:ParticipationFunction vocabulary, since it is too limited and hospital-oriented. "
                },
                "mode": {
                    "name": "mode",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "documentation": "The mode of the performer \/ activity interaction, e.g. present, by telephone, by email etc. "
                },
                "performer": {
                    "name": "performer",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Uid of demographic entity within Extract who performed this participation."
                }
            }
        },
        "EXTRACT_REQUEST": {
            "name": "EXTRACT_REQUEST",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Generic model of a Request for an Extract, containing an Extract specification.",
            "properties": {
                "extract_spec": {
                    "name": "extract_spec",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "EXTRACT_SPEC",
                    "is_mandatory": true,
                    "documentation": "Specification details of the request."
                },
                "update_spec": {
                    "name": "update_spec",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "EXTRACT_UPDATE_SPEC",
                    "documentation": "Update details of the request."
                },
                "uid": {
                    "name": "uid",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "HIER_OBJECT_ID",
                    "is_mandatory": true,
                    "documentation": "Identifier of this Request, generated by requestor."
                }
            }
        },
        "EXTRACT_SPEC": {
            "name": "EXTRACT_SPEC",
            "documentation": "Specification of an Extract's contents. Subtypes can be used to add details specific to the type of Extract. The specification consists of attributes specifying the directory, and two further groups of attributes in their own classes, namely a version specfication (which versions of information items are to be included) and a manifest (which entities are to be included in the extract).\n\nUse: Used in a request to specify an Extract, as well as to describe what is contained in an Extract.",
            "properties": {
                "version_spec": {
                    "name": "version_spec",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "EXTRACT_VERSION_SPEC",
                    "documentation": "Specification of which versions of information items to include in the Extract. If Void, the default is latest versions only (which is reasonable for non-versioning systems as well)."
                },
                "manifest": {
                    "name": "manifest",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "EXTRACT_MANIFEST",
                    "is_mandatory": true,
                    "documentation": "Specification of entities (e.g. records) to include in the Extract."
                },
                "extract_type": {
                    "name": "extract_type",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "is_mandatory": true,
                    "documentation": "Coded term indicating the type of content required, e.g.\n\n* `|openehr-ehr|`\n* `|openehr-demographic|`\n* `|generic-emr|`\n* `|other|`\n\nCoded by openEHR Terminology group `'extract content type'`."
                },
                "include_multimedia": {
                    "name": "include_multimedia",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "is_mandatory": true,
                    "documentation": "Indicates whether in-line instances of `DV_MULTIMEDIA` in the source data are included or not."
                },
                "priority": {
                    "name": "priority",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "Requested priority of this request to be handled by server. Priority schemes are likely to be local, and use values agreed by both ends.\n\nTBD: alternative is standard coded terms"
                },
                "link_depth": {
                    "name": "link_depth",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "Degree of links to follow emanating from content items specified for inclusion. The kind of links to follow is dependent on the type of Extract.\n\nAll items at the target end of followed links at the given depth are also included in the extract; `EXTRACT_CONTENT_ITEM._is_primary_` is used to differentiate.\n\n* 0 = don't follow;\n* 1 = follow first degree links;\n* 2 = follow 2nd degree links;\n* ....\n* n = follow nth degree links\n"
                },
                "criteria": {
                    "name": "criteria",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "DV_PARSABLE"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Queries specifying the contents of this Extract."
                },
                "other_details": {
                    "name": "other_details",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "documentation": "Other specification items. Archetypable."
                }
            }
        },
        "EXTRACT_UPDATE_SPEC": {
            "name": "EXTRACT_UPDATE_SPEC",
            "documentation": "Specification of the how the request should be processed by server. The request can be persisted in the server, meaning that a) it can be re-activated by the requesting system simply by indicating Request id, and b) that a changes-only pattern of Extract updates can be set up. To achieve this, the server has to remember what was sent in the previous response.\n\nThe update mode may be event-driven and periodic update or a mixture of both. The candidate items to be sent each time are the result of re-evaluating the content and versioning parts of the specification; what is actually sent is determined by the `_send_changes_only_` flag.",
            "properties": {
                "persist_in_server": {
                    "name": "persist_in_server",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "is_mandatory": true,
                    "documentation": "If True, this Request is persisted in the server until further notice."
                },
                "repeat_period": {
                    "name": "repeat_period",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DURATION",
                    "documentation": "Period for resending update Extracts in response to original Request."
                },
                "trigger_events": {
                    "name": "trigger_events",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "DV_CODED_TEXT"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Set of Event names that will cause sending of update Extracts. Event types include:   \n\n* `|any_change|` - any change in content items matched by content specification, e.g. new versions of persistent compositions. If the content list allows matching of any, or a wide range of archetypes, this event type will match any additions to the record.\n* `|correction|` - match error corrections only, including deletions.\n* `|update|` - match updates (i.e. new versions) of included content items.\n\nCoded by openEHR Terminology group 'extract update trigger event type'."
                },
                "update_method": {
                    "name": "update_method",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "is_mandatory": true,
                    "documentation": "Indicate mode of update. Can be: send only items that are changed (including logical deletions) or new since last send. For `_persist_in_server_` Requests only."
                }
            }
        },
        "EXTRACT_VERSION_SPEC": {
            "name": "EXTRACT_VERSION_SPEC",
            "documentation": "Specification of what versions should be included in an Extract. By default, only latest versions are included in the Extract, in which case this part of the Extract specification is not needed at all. The attributes `_include_all_versions_` and `_commit_time_interval_` are used to modify this; the former forces all versions to be included; the latter limits the versions to be those latest versions committed in the time interval, or if `_include_all_versions_` is `True`, all versions committed in the time interval.",
            "properties": {
                "include_all_versions": {
                    "name": "include_all_versions",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "is_mandatory": true,
                    "documentation": "True if all versions of each item in the Extract are included."
                },
                "commit_time_interval": {
                    "name": "commit_time_interval",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "DV_INTERVAL",
                        "generic_parameters": [
                            "DV_DATE_TIME"
                        ]
                    },
                    "documentation": "Specifies commit time interval of items to source repository to include in Extract. By default, only latest versions whose commit times fall in the range are included. If include_all_versions is True, then the range includes all versions committed within the interval."
                },
                "include_revision_history": {
                    "name": "include_revision_history",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "is_mandatory": true,
                    "documentation": "True if revision histories of the items in the Extract are included. If included, it is always the full revision history."
                },
                "include_data": {
                    "name": "include_data",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "is_mandatory": true,
                    "documentation": "`True` if the data of items matched by the content spec should be included. This is the default. If `False`, only revision history is included in serialised versions. Turning this option on in openEHR systems causes `X_VERSIONED_OBJECTs` to have `_revision_history_` set, but versions Void. Useful for interrogating a server without having to look at any content data. In other systems it may or may not have a sensible meaning."
                }
            }
        },
        "OPENEHR_CONTENT_ITEM": {
            "name": "OPENEHR_CONTENT_ITEM",
            "ancestors": [
                "EXTRACT_CONTENT_ITEM"
            ],
            "documentation": "Form of `EHR EXTRACT_ITEM` containing openEHR serialised `VERSIONED_OBJECTs`.",
            "properties": {
                "item": {
                    "name": "item",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "X_VERSIONED_OBJECT",
                    "documentation": "Content object."
                }
            }
        },
        "X_VERSIONED_OBJECT": {
            "name": "X_VERSIONED_OBJECT",
            "documentation": "Variety of Extract content that consists is a sharable data-oriented version of `VERSIONED_OBJECT<T>`.",
            "generic_parameter_defs": {
                "T": {
                    "name": "T"
                }
            },
            "properties": {
                "uid": {
                    "name": "uid",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "HIER_OBJECT_ID",
                    "is_mandatory": true,
                    "documentation": "Uid of original `VERSIONED_OBJECT`."
                },
                "owner_id": {
                    "name": "owner_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_REF",
                    "is_mandatory": true,
                    "documentation": "Owner_id from original `VERSIONED_OBJECT`, which identifies source EHR."
                },
                "time_created": {
                    "name": "time_created",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "is_mandatory": true,
                    "documentation": "Creation time of original `VERSIONED_OBJECT`."
                },
                "total_version_count": {
                    "name": "total_version_count",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "Total number of versions in original `VERSIONED_OBJECT` at time of creation of this `X_VERSIONED_OBJECT`."
                },
                "extract_version_count": {
                    "name": "extract_version_count",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "is_mandatory": true,
                    "documentation": "The number of Versions in this extract for this Versioned object, i.e. the count of items in the versions attribute. May be 0 if only revision history is requested."
                },
                "revision_history": {
                    "name": "revision_history",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "REVISION_HISTORY",
                    "documentation": "Optional revision history of the original `VERSIONED_OBJECT`. If included, it is the complete revision history."
                },
                "versions": {
                    "name": "versions",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "ORIGINAL_VERSION"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "0 or more Versions from the original `VERSIONED_OBJECT`, according to the Extract specification."
                }
            }
        },
        "X_VERSIONED_EHR_ACCESS": {
            "name": "X_VERSIONED_EHR_ACCESS",
            "ancestors": [
                "X_VERSIONED_OBJECT"
            ],
            "documentation": "Form of `X_VERSIONED_OBJECT` for `EHR_ACCESS` EHR object."
        },
        "X_VERSIONED_EHR_STATUS": {
            "name": "X_VERSIONED_EHR_STATUS",
            "ancestors": [
                "X_VERSIONED_OBJECT"
            ],
            "documentation": "Form of `X_VERSIONED_OBJECT` for `EHR_STATUS` EHR object."
        },
        "X_VERSIONED_COMPOSITION": {
            "name": "X_VERSIONED_COMPOSITION",
            "ancestors": [
                "X_VERSIONED_OBJECT"
            ],
            "documentation": "Form of `X_VERSIONED_OBJECT` for `COMPOSITION` EHR object."
        },
        "X_VERSIONED_FOLDER": {
            "name": "X_VERSIONED_FOLDER",
            "ancestors": [
                "X_VERSIONED_OBJECT"
            ],
            "documentation": "Form of `X_VERSIONED_OBJECT` for `FOLDER` EHR object."
        },
        "X_VERSIONED_PARTY": {
            "name": "X_VERSIONED_PARTY",
            "ancestors": [
                "X_VERSIONED_OBJECT"
            ],
            "documentation": "Form of `X_VERSIONED_OBJECT` for `PARTY` demographic object."
        },
        "GENERIC_CONTENT_ITEM": {
            "name": "GENERIC_CONTENT_ITEM",
            "ancestors": [
                "EXTRACT_CONTENT_ITEM"
            ],
            "documentation": "Single item in generic extract, designed for 13606 and CDA data.",
            "properties": {
                "item_type": {
                    "name": "item_type",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "documentation": "Identifier of model or schema used to create the content."
                },
                "item_type_version": {
                    "name": "item_type_version",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Version of model or schema used to create the content item."
                },
                "author": {
                    "name": "author",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Reference to a demographic entity elsewhere in this Extract representing the author of the item version. The reference should be a UID corresponding to the UID of a `GENERIC_CONTENT_ITEM` containing the demographic information."
                },
                "creation_time": {
                    "name": "creation_time",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Iso8601_date_time",
                    "documentation": "Time of creation of this item version on the original system. This may be an earlier commit time, or it may be the time at which the item was created during the Extract generation process."
                },
                "authoriser": {
                    "name": "authoriser",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Reference to a demographic entity elsewhere in this Extract representing an authoriser of the item version, if relevant. The reference should be a UID corresponding to the UID of a `GENERIC_CONTENT_ITEM` containing the demographic information."
                },
                "authorisation_time": {
                    "name": "authorisation_time",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Iso8601_date_time",
                    "documentation": "Time of authorisation of this item version on the original system where relevant."
                },
                "item_status": {
                    "name": "item_status",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "documentation": "Coded lifecycle status of the item."
                },
                "version_id": {
                    "name": "version_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Version id of this item in original system."
                },
                "version_set_id": {
                    "name": "version_set_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Version set id of this item in original system, where applicable."
                },
                "system_id": {
                    "name": "system_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Identifier of EMR or other system from which the item was created \/ extracted. Typically in the form of a domain name."
                },
                "other_details": {
                    "name": "other_details",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "Hash",
                        "generic_parameters": [
                            "String",
                            "String"
                        ]
                    },
                    "documentation": "Other details about the content item."
                },
                "item": {
                    "name": "item",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "LOCATABLE",
                    "documentation": "Content object."
                }
            }
        },
        "SYNC_EXTRACT_REQUEST": {
            "name": "SYNC_EXTRACT_REQUEST",
            "ancestors": [
                "MESSAGE_CONTENT"
            ],
            "documentation": "Type of request designed for synchronisation of Contributions between openEHR servers.",
            "properties": {
                "specification": {
                    "name": "specification",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "SYNC_EXTRACT_SPEC",
                    "is_mandatory": true,
                    "documentation": "Details of specification of synchronisation request."
                }
            }
        },
        "SYNC_EXTRACT": {
            "name": "SYNC_EXTRACT",
            "ancestors": [
                "MESSAGE_CONTENT"
            ],
            "documentation": "",
            "properties": {
                "specification": {
                    "name": "specification",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "SYNC_EXTRACT_SPEC",
                    "is_mandatory": true,
                    "documentation": "Details of specification of this Extract."
                },
                "items": {
                    "name": "items",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "X_CONTRIBUTION"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Content, in the form of a serialised Contributions."
                }
            }
        },
        "X_CONTRIBUTION": {
            "name": "X_CONTRIBUTION",
            "documentation": "Serialised form of Contribution for an Extract.",
            "properties": {
                "uid": {
                    "name": "uid",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "HIER_OBJECT_ID",
                    "is_mandatory": true,
                    "documentation": "Uid of Contribution in source system."
                },
                "audit": {
                    "name": "audit",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "AUDIT_DETAILS",
                    "is_mandatory": true,
                    "documentation": "Audit of Contribution in source system."
                },
                "versions": {
                    "name": "versions",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "VERSION"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Serialised Versions from Contribution in source system."
                }
            }
        },
        "SYNC_EXTRACT_SPEC": {
            "name": "SYNC_EXTRACT_SPEC",
            "documentation": "Details of specification of Extract, used in a request to specify an Extract, or in a response, to describe what is actually in the Extract.",
            "properties": {
                "includes_versions": {
                    "name": "includes_versions",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "is_mandatory": true,
                    "documentation": "True if the Versions from the Contribution are included; False if just the Contribution and its Audit are included."
                },
                "contribution_list": {
                    "name": "contribution_list",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "HIER_OBJECT_ID"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "List of Contributions to include \/ that are included in the Extract."
                },
                "contributions_since": {
                    "name": "contributions_since",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "documentation": "Specify Contributions included in Extract by threshold date."
                },
                "all_contributions": {
                    "name": "all_contributions",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Boolean",
                    "documentation": "True if all Contributions in the record are included."
                }
            }
        },
        "MESSAGE": {
            "name": "MESSAGE",
            "documentation": "A \u201cmessage\u201d is an authored, possibly signed, piece of content intended for one or more recipients. Since the recipient may or may not be known directly, recipients are specified in the `ADDRESSED_MESSAGE` class.",
            "properties": {
                "audit": {
                    "name": "audit",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "AUDIT_DETAILS",
                    "is_mandatory": true,
                    "documentation": "Details of who actually created the message and when. This is the person who entered the data or otherwise caused the message to be created, or might be a piece of software."
                },
                "author": {
                    "name": "author",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_PROXY",
                    "is_mandatory": true,
                    "documentation": "Party responsible for the message content, who may or may not be technically responsible for its creation (e.g. by data entry etc)."
                },
                "content": {
                    "name": "content",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "MESSAGE_CONTENT",
                    "is_mandatory": true,
                    "documentation": "Content of the message."
                },
                "signature": {
                    "name": "signature",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "Optional signature by the author of message content in openPGP format. The signature is created as a Hash and optional signing of the serialisation of this message object with this signature field Void."
                }
            }
        },
        "ADDRESSED_MESSAGE": {
            "name": "ADDRESSED_MESSAGE",
            "documentation": "The concept of a message addressed to nominated recipients.",
            "properties": {
                "sender": {
                    "name": "sender",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Party sending the message."
                },
                "sender_reference": {
                    "name": "sender_reference",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Identification of message used by sender. This will be the same no matter how many times this message is sent to these recipients."
                },
                "addressees": {
                    "name": "addressees",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "String"
                    },
                    "cardinality": "|>=1|",
                    "is_mandatory": true,
                    "documentation": "Intended recipients, in the form of internet addresses."
                },
                "urgency": {
                    "name": "urgency",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Integer",
                    "documentation": "Urgency with which destination should deal with message:\n\n* -1 - low\n* 0 - normal\n* 1 - high"
                },
                "message": {
                    "name": "message",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "MESSAGE",
                    "is_mandatory": true,
                    "documentation": "The content of the message."
                }
            }
        },
        "MESSAGE_CONTENT": {
            "name": "MESSAGE_CONTENT",
            "is_abstract": true,
            "documentation": "Abstract parent of message payload types."
        },
        "PARTY": {
            "name": "PARTY",
            "is_abstract": true,
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Ancestor of all Party types, including real world entities and their roles. A Party is any entity which can participate in an activity. The `_name_` attribute inherited from `LOCATABLE` is used to indicate the actual type of party (note that the actual names, i.e. identities of parties are indicated in the `_identities_` attribute, not the `_name_` attribute).\n\nNOTE: It is strongly recommended that the inherited attribute `_uid_` be populated in `PARTY` objects, using the UID copied from the `_object_id()_` of the `_uid_` field of the enclosing `VERSION` object. +\nFor example, the `ORIGINAL_VERSION.uid` `87284370-2D4B-4e3d-A3F3-F303D2F4F34B::uk.nhs.ehr1::2`  would be copied to the `_uid_` field of the `PARTY` object.",
            "properties": {
                "identities": {
                    "name": "identities",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "PARTY_IDENTITY"
                    },
                    "cardinality": "|>=1|",
                    "is_mandatory": true,
                    "documentation": "Identities used by the party to identify itself, such as legal name, stage names, aliases, nicknames and so on."
                },
                "contacts": {
                    "name": "contacts",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "CONTACT"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Contacts for this party."
                },
                "details": {
                    "name": "details",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "documentation": "All other details for this Party."
                },
                "reverse_relationships": {
                    "name": "reverse_relationships",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "LOCATABLE_REF"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "References to relationships in which this Party takes part as target."
                },
                "relationships": {
                    "name": "relationships",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "PARTY_RELATIONSHIP"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Relationships in which this Party takes part as source."
                }
            }
        },
        "CONTACT": {
            "name": "CONTACT",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Description of a means of contact of a Party. Actual structure is archetyped.",
            "properties": {
                "addresses": {
                    "name": "addresses",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "ADDRESS"
                    },
                    "cardinality": "|>=1|",
                    "is_mandatory": true,
                    "documentation": "A set of address alternatives for this contact purpose and time validity combination."
                },
                "time_validity": {
                    "name": "time_validity",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "DV_INTERVAL",
                        "generic_parameters": [
                            "DV_DATE"
                        ]
                    },
                    "documentation": "Valid time interval for this contact descriptor."
                }
            }
        },
        "ADDRESS": {
            "name": "ADDRESS",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Address of contact, which may be electronic or geographic.",
            "properties": {
                "details": {
                    "name": "details",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "is_mandatory": true,
                    "documentation": "Archetypable structured address."
                }
            }
        },
        "PARTY_IDENTITY": {
            "name": "PARTY_IDENTITY",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "An identity  owned  by a Party, such as a person name or company name, and which is used by the Party to identify itself. Actual structure is archetyped.",
            "properties": {
                "details": {
                    "name": "details",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "is_mandatory": true,
                    "documentation": "The value of the identity. This will often taken the form of a parseable string or a small structure of strings."
                }
            }
        },
        "ROLE": {
            "name": "ROLE",
            "ancestors": [
                "PARTY"
            ],
            "documentation": "Generic description of a role performed by an Actor. The role corresponds to a competency of the Party. Roles are used to define the responsibilities undertaken by a Party for a purpose. Roles should have credentials qualifying the performer to perform the role.",
            "properties": {
                "time_validity": {
                    "name": "time_validity",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "DV_INTERVAL",
                        "generic_parameters": [
                            "DV_DATE"
                        ]
                    },
                    "documentation": "Valid time interval for this role."
                },
                "performer": {
                    "name": "performer",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_REF",
                    "is_mandatory": true,
                    "documentation": "Reference to Version container of Actor playing the role."
                },
                "capabilities": {
                    "name": "capabilities",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "CAPABILITY"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "The capabilities of this role."
                }
            }
        },
        "ACTOR": {
            "name": "ACTOR",
            "is_abstract": true,
            "ancestors": [
                "PARTY"
            ],
            "documentation": "Ancestor of all real-world types, including people and organisations. An actor is any real-world entity capable of taking on a role.",
            "properties": {
                "languages": {
                    "name": "languages",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "DV_TEXT"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Languages which can be used to communicate with this actor, in preferred order of use (if known, else order irrelevant)."
                },
                "roles": {
                    "name": "roles",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "PARTY_REF"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Identifiers of the Version container for each Role played by this Party."
                }
            }
        },
        "CAPABILITY": {
            "name": "CAPABILITY",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Capability of a role, such as  ehr modifier ,  health care provider . Capability should be backed up by credentials.",
            "properties": {
                "credentials": {
                    "name": "credentials",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "is_mandatory": true,
                    "documentation": "The qualifications of the performer of the role for this capability. This might include professional qualifications and official identifications such as provider numbers etc."
                },
                "time_validity": {
                    "name": "time_validity",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "DV_INTERVAL",
                        "generic_parameters": [
                            "DV_DATE"
                        ]
                    },
                    "documentation": "Valid time interval for the credentials of this capability."
                }
            }
        },
        "AGENT": {
            "name": "AGENT",
            "ancestors": [
                "ACTOR"
            ],
            "documentation": "Generic concept of any kind of agent, including devices, software systems, but not humans or organisations."
        },
        "ORGANISATION": {
            "name": "ORGANISATION",
            "ancestors": [
                "ACTOR"
            ],
            "documentation": "Generic description of organisations. An organisation is a legally constituted body whose existence (in general) outlives the existence of parties considered to be part of it."
        },
        "GROUP": {
            "name": "GROUP",
            "ancestors": [
                "ACTOR"
            ],
            "documentation": "A group is a real world group of parties which is created by another party, usually an organisation, for some specific purpose. A typical clinical example is that of the specialist care team, e.g.  cardiology team . The members of the group usually work together."
        },
        "PERSON": {
            "name": "PERSON",
            "ancestors": [
                "ACTOR"
            ],
            "documentation": "Generic description of persons. Provides a dedicated type to which Person archetypes can be targeted."
        },
        "PARTY_RELATIONSHIP": {
            "name": "PARTY_RELATIONSHIP",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Generic description of a relationship between parties.",
            "properties": {
                "details": {
                    "name": "details",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "documentation": "The detailed description of the relationship."
                },
                "target": {
                    "name": "target",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_REF",
                    "is_mandatory": true,
                    "documentation": "Target of relationship."
                },
                "time_validity": {
                    "name": "time_validity",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "DV_INTERVAL",
                        "generic_parameters": [
                            "DV_DATE"
                        ]
                    },
                    "documentation": "Valid time interval for this relationship."
                },
                "source": {
                    "name": "source",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_REF",
                    "is_mandatory": true,
                    "documentation": "Source of relationship."
                }
            }
        },
        "VERSIONED_PARTY": {
            "name": "VERSIONED_PARTY",
            "ancestors": [
                "VERSIONED_OBJECT"
            ],
            "documentation": "Static type formed by binding generic parameter of `VERSIONED_OBJECT<T>` to `PARTY`. "
        },
        "GENERIC_ENTRY": {
            "name": "GENERIC_ENTRY",
            "ancestors": [
                "CONTENT_ITEM"
            ],
            "documentation": "This class is used to create intermediate representations of data from sources not otherwise conforming to openEHR classes, such as HL7 messages, relational databases and so on.",
            "properties": {
                "data": {
                    "name": "data",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_TREE",
                    "is_mandatory": true,
                    "documentation": "The \u2018data\u2019 from the source message or record."
                }
            }
        },
        "COMPOSITION": {
            "name": "COMPOSITION",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Content of one version in a `VERSIONED_COMPOSITION`. A Composition is considered the unit of modification of the record, the unit of transmission in record Extracts, and the unit of attestation by authorising clinicians. In this latter sense, it may be considered equivalent to a signed document.\n\nNOTE: It is strongly recommended that the inherited attribute `_uid_` be populated in Compositions, using the UID copied from the `_object_id()_` of the `_uid_` field of the enclosing `VERSION` object. +\nFor example, the `ORIGINAL_VERSION.uid` `87284370-2D4B-4e3d-A3F3-F303D2F4F34B::uk.nhs.ehr1::2` would be copied to the `_uid_` field of the Composition.",
            "properties": {
                "language": {
                    "name": "language",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "is_mandatory": true,
                    "documentation": "Mandatory indicator of the localised language in which this Composition is written. Coded from openEHR Code Set  `languages`. The language of an Entry if different from the Composition is indicated in `ENTRY._language_`. "
                },
                "territory": {
                    "name": "territory",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "is_mandatory": true,
                    "documentation": "Name of territory in which this Composition was written. Coded from openEHR  countries  code set, which is an expression of the ISO 3166 standard."
                },
                "category": {
                    "name": "category",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "is_mandatory": true,
                    "documentation": "Temporal category of this Composition, i.e. \n\n* `431|persistent|` - of potential life-time validity;\n* `451|episodic|` - valid over the life of a care episode;\n* `433|event|` - valid at the time of recording (long-term validity requires subsequent clinical assessment).\n\nor any other code defined in the openEHR terminology group 'category'.\n"
                },
                "context": {
                    "name": "context",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "EVENT_CONTEXT",
                    "documentation": "The clinical session context of this Composition, i.e. the contextual attributes of the clinical session. "
                },
                "composer": {
                    "name": "composer",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_PROXY",
                    "is_mandatory": true,
                    "documentation": "The person primarily responsible for the content of the Composition (but not necessarily its committal into the EHR system). This is the identifier which should appear on the screen. It may or may not be the person who entered the data. When it is the patient, the special self  instance of `PARTY_PROXY` will be used."
                },
                "content": {
                    "name": "content",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "CONTENT_ITEM"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "The content of this Composition. "
                }
            }
        },
        "EVENT_CONTEXT": {
            "name": "EVENT_CONTEXT",
            "ancestors": [
                "PATHABLE"
            ],
            "documentation": "Documents the context information of a healthcare event involving the subject of care and the health system. The context information recorded here are independent of the attributes recorded in the version audit, which document the  system interaction  context, i.e. the context of a user interacting with the health record system. Healthcare events include patient contacts, and any other business activity, such as pathology investigations which take place on behalf of the patient. ",
            "properties": {
                "start_time": {
                    "name": "start_time",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "is_mandatory": true,
                    "documentation": "Start time of the clinical session or other kind of event during which a provider performs a service of any kind for the patient. "
                },
                "end_time": {
                    "name": "end_time",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "documentation": "Optional end time of the clinical session. \n"
                },
                "location": {
                    "name": "location",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": "The actual location where the session occurred, e.g. 'microbiology lab 2', 'home', 'ward A3'  and so on."
                },
                "setting": {
                    "name": "setting",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "is_mandatory": true,
                    "documentation": "The setting in which the clinical session took place. Coded using the openEHR Terminology,  setting  group. "
                },
                "other_context": {
                    "name": "other_context",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "documentation": "Other optional context which will be archetyped."
                },
                "health_care_facility": {
                    "name": "health_care_facility",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_IDENTIFIED",
                    "documentation": "The health care facility under whose care the event took place. This is the most specific workgroup or delivery unit within a care delivery enterprise that has an official identifier in the health system, and can be used to ensure medico-legal accountability. "
                },
                "participations": {
                    "name": "participations",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "PARTICIPATION"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Parties involved in the healthcare event. These would normally include the physician(s) and often the patient (but not the latter if the clinical session is a pathology test for example). "
                }
            }
        },
        "CONTENT_ITEM": {
            "name": "CONTENT_ITEM",
            "is_abstract": true,
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Abstract ancestor of all concrete content types."
        },
        "SECTION": {
            "name": "SECTION",
            "ancestors": [
                "CONTENT_ITEM"
            ],
            "documentation": "Represents a heading in a heading structure, or  section tree.  Created according to archetyped structures for typical headings such as SOAP,  physical examination, but also pathology result heading structures.  Should not be used instead of `ENTRY` hierarchical structures. \n",
            "properties": {
                "items": {
                    "name": "items",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "CONTENT_ITEM"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Ordered list of content items under this section, which may include:\n\n* more `SECTIONs`;\n* `ENTRYs`."
                }
            }
        },
        "ADMIN_ENTRY": {
            "name": "ADMIN_ENTRY",
            "ancestors": [
                "ENTRY"
            ],
            "documentation": "Entry subtype for administrative information, i.e. information about setting up the clinical process, but not itself clinically relevant. Archetypes will define contained information.\n\nUsed for administrative details of admission, episode, ward location, discharge, appointment (if not stored in a practice management or appointments system). \n\nNot to be used for any clinically significant information.",
            "properties": {
                "data": {
                    "name": "data",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "is_mandatory": true,
                    "documentation": "Content of the Admin Entry."
                }
            }
        },
        "CARE_ENTRY": {
            "name": "CARE_ENTRY",
            "is_abstract": true,
            "ancestors": [
                "ENTRY"
            ],
            "documentation": "The abstract parent of all clinical `ENTRY` subtypes. A `CARE_ENTRY` defines protocol and guideline attributes for all clinical Entry subtypes. ",
            "properties": {
                "protocol": {
                    "name": "protocol",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "documentation": "Description of the method (i.e. how) the information in this entry was arrived at. For `OBSERVATIONs`, this is a description of the method or instrument used. For `EVALUATIONs`, how the evaluation was arrived at. For `INSTRUCTIONs`, how to execute the Instruction. This may take the form of references to guidelines, including manually followed and executable; knowledge references such as a paper in Medline; clinical reasons within a larger care process. "
                },
                "guideline_id": {
                    "name": "guideline_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_REF",
                    "documentation": "Optional external identifier of guideline creating this Entry if relevant."
                }
            }
        },
        "OBSERVATION": {
            "name": "OBSERVATION",
            "ancestors": [
                "CARE_ENTRY"
            ],
            "documentation": "Entry subtype for all clinical data in the past or present, i.e. which (by the time it is recorded) has already occurred. `OBSERVATION` data is expressed using the class `HISTORY<T>`, which guarantees that it is situated in time. `OBSERVATION` is used for all notionally objective (i.e. measured in some way) observations of phenomena, and patient-reported phenomena, e.g. pain. \n\nNot to be used for recording opinion or future statements of any kind, including instructions, intentions, plans etc.",
            "properties": {
                "data": {
                    "name": "data",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "HISTORY",
                        "generic_parameters": [
                            "ITEM_STRUCTURE"
                        ]
                    },
                    "is_mandatory": true,
                    "documentation": "The data of this observation, in the form of a history of values which may be of any complexity."
                },
                "state": {
                    "name": "state",
                    "_type": "P_BMM_GENERIC_PROPERTY",
                    "type_def": {
                        "root_type": "HISTORY",
                        "generic_parameters": [
                            "ITEM_STRUCTURE"
                        ]
                    },
                    "documentation": "Optional recording of the state of subject of this observation during the observation process, in the form of a separate history of values which may be of any complexity. State may also be recorded within the History of the data attribute. "
                }
            }
        },
        "EVALUATION": {
            "name": "EVALUATION",
            "ancestors": [
                "CARE_ENTRY"
            ],
            "documentation": "Entry type for evaluation statements. Used for all kinds of statements which evaluate other information, such as interpretations of observations, diagnoses, differential diagnoses, hypotheses, risk assessments, goals and plans. \n\nShould not be used for actionable statements such as medication orders - these are represented using the `INSTRUCTION` type. ",
            "properties": {
                "data": {
                    "name": "data",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "is_mandatory": true,
                    "documentation": "The data of this evaluation, in the form of a spatial data structure."
                }
            }
        },
        "ACTION": {
            "name": "ACTION",
            "ancestors": [
                "CARE_ENTRY"
            ],
            "documentation": "Used to record a clinical action that has been performed, which may have been ad hoc, or due to the execution of an Activity in an Instruction workflow. Every Action corresponds to a careflow step of some kind or another. ",
            "properties": {
                "time": {
                    "name": "time",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "is_mandatory": true,
                    "documentation": "Point in time at which this action completed. "
                },
                "ism_transition": {
                    "name": "ism_transition",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ISM_TRANSITION",
                    "is_mandatory": true,
                    "documentation": "Details of transition in the Instruction state machine caused by this Action."
                },
                "instruction_details": {
                    "name": "instruction_details",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "INSTRUCTION_DETAILS",
                    "documentation": "Details of the Instruction that caused this Action to be performed, if there was one."
                },
                "description": {
                    "name": "description",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "is_mandatory": true,
                    "documentation": "Description of the action that has been performed, in the form of an archetyped structure."
                }
            }
        },
        "ACTIVITY": {
            "name": "ACTIVITY",
            "ancestors": [
                "LOCATABLE"
            ],
            "documentation": "Defines a single activity within an Instruction, such as a medication administration. ",
            "properties": {
                "timing": {
                    "name": "timing",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_PARSABLE",
                    "documentation": "Timing of the activity, in the form of a parsable string. If used, the preferred syntax is ISO8601 'R' format, but other formats may be used including HL7 GTS.\n\nMay be omitted if:\n\n* timing is represented structurally in the `_description_` attribute (e.g. via archetyped elements), or\n* unavailable, e.g. imported legacy data; in such cases, the `INSTRUCTION._narrative_` should carry text that indicates the timing of its `_activities_`."
                },
                "action_archetype_id": {
                    "name": "action_archetype_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Perl-compliant regular expression pattern, enclosed in  '\/\/' delimiters, indicating the valid identifiers of archetypes for Actions corresponding to this Activity specification. \n\nDefaults to  `\/.*\/`, meaning any archetype."
                },
                "description": {
                    "name": "description",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "is_mandatory": true,
                    "documentation": "Description of the activity, in the form of an archetyped structure."
                }
            }
        },
        "ISM_TRANSITION": {
            "name": "ISM_TRANSITION",
            "ancestors": [
                "PATHABLE"
            ],
            "documentation": "Model of a transition in the Instruction State Machine, caused by a careflow step. The attributes document the careflow step as well as the ISM transition. ",
            "properties": {
                "current_state": {
                    "name": "current_state",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "is_mandatory": true,
                    "documentation": "The ISM current state. Coded by openEHR terminology group Instruction states."
                },
                "transition": {
                    "name": "transition",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "documentation": "The ISM transition which occurred to arrive in the current_state. Coded by openEHR terminology group  Instruction transitions."
                },
                "careflow_step": {
                    "name": "careflow_step",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_CODED_TEXT",
                    "documentation": "The step in the careflow process which occurred as part of generating this action, e.g.  dispense ,  start_administration. This attribute represents the clinical  label for the activity, as  opposed to current_state which represents  the state machine (ISM)  computable form. Defined in archetype."
                },
                "reason": {
                    "name": "reason",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "DV_TEXT"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Optional possibility of adding one or more reasons for this careflow step having been taken. Multiple reasons may occur in medication management for example."
                }
            }
        },
        "INSTRUCTION_DETAILS": {
            "name": "INSTRUCTION_DETAILS",
            "ancestors": [
                "PATHABLE"
            ],
            "documentation": "Used to record details of the Instruction causing an Action. \n",
            "properties": {
                "instruction_id": {
                    "name": "instruction_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "LOCATABLE_REF",
                    "is_mandatory": true,
                    "documentation": "Reference to causing Instruction."
                },
                "activity_id": {
                    "name": "activity_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "is_mandatory": true,
                    "documentation": "Identifier of Activity within Instruction, in the form of its archetype path. "
                },
                "wf_details": {
                    "name": "wf_details",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "documentation": "Various workflow engine state details, potentially including such things as:\n\n* condition that fired to cause this Action to be done (with actual variables substituted); \n* list of notifications which actually occurred (with all variables substituted); \n* other workflow engine state. \n\nThis specification does not currently define the actual structure or semantics of this field. \n"
                }
            }
        },
        "ENTRY": {
            "name": "ENTRY",
            "is_abstract": true,
            "ancestors": [
                "CONTENT_ITEM"
            ],
            "documentation": "The abstract parent of all `ENTRY` subtypes. An `ENTRY` is the root of a logical item of  hard  clinical information created in the  clinical statement  context, within a clinical session. There can be numerous such contexts in a clinical session. Observations and other Entry types only ever document information captured\/created in the event documented by the enclosing Composition.\n\nAn `ENTRY` is also the minimal unit of information any query should return, since a whole `ENTRY` (including subparts) records spatial structure, timing information, and contextual information, as well as the subject and generator of the information. ",
            "properties": {
                "language": {
                    "name": "language",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "is_mandatory": true,
                    "documentation": "Mandatory indicator of the localised language in which this Entry is written. Coded from openEHR Code Set  languages . "
                },
                "encoding": {
                    "name": "encoding",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CODE_PHRASE",
                    "is_mandatory": true,
                    "documentation": "Name of character set in which text values in this Entry are encoded. Coded from openEHR Code Set  character sets."
                },
                "other_participations": {
                    "name": "other_participations",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "PARTICIPATION"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "Other participations at `ENTRY` level. "
                },
                "workflow_id": {
                    "name": "workflow_id",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "OBJECT_REF",
                    "documentation": "Identifier of externally held workflow engine data for this workflow execution, for this subject of care."
                },
                "subject": {
                    "name": "subject",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_PROXY",
                    "is_mandatory": true,
                    "documentation": "Id of human subject of this `ENTRY`, e.g.: \n\n* organ donor \n* foetus \n* a family member \n* another clinically relevant person."
                },
                "provider": {
                    "name": "provider",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "PARTY_PROXY",
                    "documentation": "Optional identification of provider of the information in this `ENTRY`, which might be: \n\n* the patient \n* a patient agent, e.g. parent, guardian \n* the clinician \n* a device or software \n\nGenerally only used when the recorder needs to make it explicit. Otherwise, Composition composer and other participants are assumed. \n"
                }
            }
        },
        "INSTRUCTION": {
            "name": "INSTRUCTION",
            "ancestors": [
                "CARE_ENTRY"
            ],
            "documentation": "Used to specify actions in the future. Enables simple and complex specifications to be expressed, including in a fully-computable workflow form. Used for any actionable statement such as medication and therapeutic orders, monitoring, recall and review. Enough details must be provided for the specification to be directly executed by an actor, either human or machine. \n\nNot to be used for plan items which are only specified in general terms. ",
            "properties": {
                "narrative": {
                    "name": "narrative",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_TEXT",
                    "is_mandatory": true,
                    "documentation": "Mandatory human-readable version of what the Instruction is about. "
                },
                "expiry_time": {
                    "name": "expiry_time",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_DATE_TIME",
                    "documentation": "Optional expiry date\/time to assist determination of when an Instruction can be assumed to have expired. This helps prevent false listing of Instructions as Active when they clearly must have been terminated in some way or other. "
                },
                "wf_definition": {
                    "name": "wf_definition",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_PARSABLE",
                    "documentation": "Optional workflow engine executable expression of the Instruction. "
                },
                "activities": {
                    "name": "activities",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "ACTIVITY"
                    },
                    "cardinality": "|>=0|",
                    "documentation": "List of all activities in Instruction. \n"
                }
            }
        },
        "VIEW_ENTRY": {
            "name": "VIEW_ENTRY",
            "is_abstract": true,
            "ancestors": [
                "VIEW_ITEM"
            ],
            "documentation": ""
        },
        "VIEW_SECTION": {
            "name": "VIEW_SECTION",
            "ancestors": [
                "VIEW_ITEM"
            ],
            "documentation": "",
            "properties": {
                "items": {
                    "name": "items",
                    "_type": "P_BMM_CONTAINER_PROPERTY",
                    "type_def": {
                        "container_type": "List",
                        "type": "VIEW_ITEM"
                    },
                    "cardinality": "|>=0|",
                    "documentation": ""
                }
            }
        },
        "CITATION": {
            "name": "CITATION",
            "ancestors": [
                "VIEW_ENTRY"
            ],
            "documentation": "",
            "generic_parameter_defs": {
                "L": {
                    "name": "L",
                    "conforms_to_type": "LOCATABLE"
                }
            },
            "properties": {
                "source_type": {
                    "name": "source_type",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": ""
                },
                "source_ref": {
                    "name": "source_ref",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "LOCATABLE_REF",
                    "is_mandatory": true,
                    "documentation": "Reference to original object."
                },
                "source_parent_ref": {
                    "name": "source_parent_ref",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "LOCATABLE_REF",
                    "is_mandatory": true,
                    "documentation": "Reference to target's owning object."
                },
                "resolved": {
                    "name": "resolved",
                    "_type": "P_BMM_SINGLE_PROPERTY_OPEN",
                    "type": "L",
                    "is_mandatory": true,
                    "documentation": "Resolved form."
                }
            }
        },
        "VIEW_ITEM": {
            "name": "VIEW_ITEM",
            "is_abstract": true,
            "ancestors": [
                "CONTENT_ITEM"
            ],
            "documentation": "",
            "properties": {
                "meta_data": {
                    "name": "meta_data",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "CLUSTER",
                    "documentation": ""
                }
            }
        },
        "VIEW_STATUS": {
            "name": "VIEW_STATUS",
            "_type": "P_BMM_ENUMERATION_STRING",
            "ancestors": [
                "String"
            ],
            "documentation": "",
            "item_names": [
                "active",
                "inactive"
            ]
        },
        "SERVICE_USE": {
            "name": "SERVICE_USE",
            "ancestors": [
                "RESOURCE_USE"
            ],
            "documentation": "",
            "properties": {
                "identifier": {
                    "name": "identifier",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "GENERIC_ID",
                    "documentation": ""
                },
                "start_time": {
                    "name": "start_time",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Iso8601_date_time",
                    "documentation": ""
                },
                "duration": {
                    "name": "duration",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Iso8601_duration",
                    "documentation": ""
                }
            }
        },
        "RESOURCE_USE": {
            "name": "RESOURCE_USE",
            "is_abstract": true,
            "documentation": "",
            "properties": {
                "cost_data": {
                    "name": "cost_data",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "ITEM_STRUCTURE",
                    "documentation": ""
                }
            }
        },
        "CONSUMABLE_USE": {
            "name": "CONSUMABLE_USE",
            "ancestors": [
                "RESOURCE_USE"
            ],
            "documentation": "",
            "properties": {
                "amount": {
                    "name": "amount",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DATA_VALUE",
                    "documentation": ""
                }
            }
        },
        "RESOURCE_USAGE": {
            "name": "RESOURCE_USAGE",
            "documentation": "",
            "properties": {
                "prospective": {
                    "name": "prospective",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "RESOURCE_USE",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "actual": {
                    "name": "actual",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "RESOURCE_USE",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "type": {
                    "name": "type",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "DV_TEXT",
                    "is_mandatory": true,
                    "documentation": ""
                },
                "description": {
                    "name": "description",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "String",
                    "documentation": ""
                },
                "reference": {
                    "name": "reference",
                    "_type": "P_BMM_SINGLE_PROPERTY",
                    "type": "Any",
                    "documentation": ""
                }
            }
        }
    }
}
